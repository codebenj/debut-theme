<?php
//activate
if (! function_exists('activate_sales_countdown_addon')) {
    function activate_sales_countdown_addon($StoreThemes, $shop) {
        foreach ($StoreThemes as $theme) {

            // Update schema file
            try{
                $schema = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json'] ]
                )['body']['asset']['value'] ?? '';

                $liveview_addon_schema = (string) '
{
    "name": "Sales countdown",
    "settings": [
      {
        "type": "header",
        "content": "Activation"
      },
      {
        "type": "checkbox",
        "id": "dbtfy_sales_countdown",
        "label": "Activate",
        "info": "Only applies to on sale variants",
        "default": false
      },
      {
        "type": "header",
        "content": "Text Settings"
      },
      {
        "type": "checkbox",
        "id": "dbtfy_sales_countdown_bg",
        "label": "Add background color",
        "default": true
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_icon",
        "label": "Icon",
        "default": "hourglass-half",
        "info": "Enter the name of any free solid icons on [FontAwesome](https:\/\/fontawesome.com\/icons?d=gallery&s=solid&m=free)"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_prefix",
        "label": "Prefix",
        "default": "Sale ends in"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_suffix",
        "label": "Suffix"
      },
      {
        "type": "header",
        "content": "Timer Settings"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_date",
        "label": "Sale end date",
        "info": "MM\/DD\/YYYY"
      },
      {
        "type": "range",
        "id": "dbtfy_sales_countdown_time_hours",
        "label": "Hours",
        "min": 0,
        "max": 23,
        "step": 1,
        "default": 2
      },
      {
        "type": "range",
        "id": "dbtfy_sales_countdown_time_mins",
        "label": "Minutes",
        "min": 0,
        "max": 59,
        "step": 1,
        "default": 48
      },
      {
        "type": "header",
        "content": "Visibility Settings"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_type",
        "label": "Product type",
        "info": "Comma-separated"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_tag",
        "label": "Product tag",
        "info": "Comma-separated"
      },
      {
        "type": "product",
        "id": "dbtfy_sales_countdown_product",
        "label": "Product"
      },
      {
        "type": "collection",
        "id": "dbtfy_sales_countdown_collection",
        "label": "Collection"
      },
      {
        "type": "header",
        "content": "Translation Settings"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_d",
        "label": "Days",
        "default": "d"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_h",
        "label": "Hours",
        "default": "h"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_m",
        "label": "Minutes",
        "default": "m"
      },
      {
        "type": "text",
        "id": "dbtfy_sales_countdown_s",
        "label": "Seconds",
        "default": "s"
      }
    ]
  }';

                if( ( $badgePos = strpos( $schema , 'dbtfy_sales_countdown' ) ) === false ) {
                    if( ( $pos = strrpos( $schema , ']' ) ) !== false ) {
                        $updated_schema    = substr_replace( $schema , ",".$liveview_addon_schema."]" , $pos );
                        $update_schema_settings = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update schema on live view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update schema on live view addon throws exception');
            }

            // add snippet
            try{
                $snippet = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
{%- if settings.dbtfy_sales_countdown -%}

  <!--on sale -->
  {% assign on_sale = false %}

  {% if current_variant.compare_at_price > current_variant.price %}
    {% assign on_sale = true %}
  {% endif %}

  <!-- type -->
  {% if settings.dbtfy_sales_countdown_type != blank %}
    {% assign type_list = settings.dbtfy_sales_countdown_type | split: "," %}
    {% for type in type_list %}
      {% if product.type contains type %}
        {% assign valid_sale = true %}
      {% endif %}
    {% endfor %}
  {% endif %}

  <!-- tag -->
  {% if settings.dbtfy_sales_countdown_tag != blank %}
    {% assign tag_list = settings.dbtfy_sales_countdown_tag | split: "," %}
    {% for tag in tag_list %}
      {% if product.tags contains tag %}
        {% assign valid_sale = true %}
      {% endif %}
    {% endfor %}
  {% endif %}

  <!-- product -->
  {% assign product_filter = all_products[settings.dbtfy_sales_countdown_product] %}
  {% if product_filter != blank %}
    {% if product.handle == product_filter.handle %}
      {% assign valid_sale = true %}
    {% endif %}
  {% endif %}

  <!-- collection -->
  {% if settings.dbtfy_sales_countdown_collection != blank %}
    {% for collection in product.collections %}
      {% if collection.handle == settings.dbtfy_sales_countdown_collection %}
        {% assign valid_sale = true %}
        {% break %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if settings.dbtfy_sales_countdown_product == blank and settings.dbtfy_sales_countdown_type == blank and settings.dbtfy_sales_countdown_tag == blank and settings.dbtfy_sales_countdown_collection == blank %}
    {% assign valid_sale = true %}
  {% endif %}

  {% if valid_sale and on_sale %}
    <div class="dbtfy dbtfy-sales_countdown"
         data-date="{{settings.dbtfy_sales_countdown_date}}"
         data-hours="{{settings.dbtfy_sales_countdown_time_hours}}"
         data-minutes="{{settings.dbtfy_sales_countdown_time_mins}}">
      <div id="SalesCountdown" class="SalesCountdown {% if settings.dbtfy_sales_countdown_bg %}background-sales_countdown{% endif %}">
        {% unless settings.dbtfy_sales_countdown_icon == "" %}
        <span class="fas fa-{{ settings.dbtfy_sales_countdown_icon }} fa-fw"></span>
        {% endunless %}
        <span class="prefix-sales_countdown">{{ settings.dbtfy_sales_countdown_prefix }}</span>
        <strong class="timer-sales_countdown">
          <span class="days-sales_countdown"></span>
          <span class="hours-sales_countdown"></span>
          <span class="minutes-sales_countdown"></span>
          <span class="seconds-sales_countdown"></span>
        </strong>
        <span class="suffix-sales_countdown">{{ settings.dbtfy_sales_countdown_suffix }}</span>
      </div>
    </div>
  {% endif %}

{%- endif -%}';

                $snippet = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $snippet);

                $create_trustbadge_snippet = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/dbtfy-sales-countdown.liquid', 'value' => $snippet] ]
                );

                logger(json_encode($create_trustbadge_snippet));
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add sales_countdown throws client exception');
            }
            catch(\Exception $e){
                logger('add sales_countdown throws exception');
            }

            // add js addon
            try{
              $script= (string)'/* start-dbtfy-sales-countdown */ function themeSalesCountdown(){ {% if settings.dbtfy_sales_countdown %} var textDays = "{{settings.dbtfy_sales_countdown_d}}"; var textHours = "{{settings.dbtfy_sales_countdown_h}}"; var textMinutes = "{{settings.dbtfy_sales_countdown_m}}"; var textSeconds = "{{settings.dbtfy_sales_countdown_s}}"; var _0xb0d1=["\x2E\x64\x62\x74\x66\x79\x2D\x73\x61\x6C\x65\x73\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x64\x61\x74\x65","\x64\x61\x74\x61","\x2E\x53\x61\x6C\x65\x73\x43\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x68\x6F\x75\x72\x73","\x6D\x69\x6E\x75\x74\x65\x73","","\x20","\x3A","\x3A\x35\x39","\x70\x61\x72\x73\x65","\x65\x6E\x64\x74\x69\x6D\x65","\x67\x65\x74\x49\x74\x65\x6D","\x2E\x74\x69\x6D\x65\x72\x2D\x73\x61\x6C\x65\x73\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x2E\x64\x61\x79\x73\x2D\x73\x61\x6C\x65\x73\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x2E\x68\x6F\x75\x72\x73\x2D\x73\x61\x6C\x65\x73\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x2E\x6D\x69\x6E\x75\x74\x65\x73\x2D\x73\x61\x6C\x65\x73\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x2E\x73\x65\x63\x6F\x6E\x64\x73\x2D\x73\x61\x6C\x65\x73\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x67\x65\x74\x54\x69\x6D\x65","\x66\x6C\x6F\x6F\x72","\x68\x69\x64\x65","\x74\x65\x78\x74","\x73\x65\x74\x49\x74\x65\x6D","\x73\x68\x6F\x70\x69\x66\x79\x3A\x73\x65\x63\x74\x69\x6F\x6E\x3A\x6C\x6F\x61\x64","\x72\x65\x6D\x6F\x76\x65\x49\x74\x65\x6D","\x6F\x6E"];function SalesCountdown(){var _0x3563x2=$(_0xb0d1[0]),_0x3563x3=_0x3563x2[_0xb0d1[2]](_0xb0d1[1]),_0x3563x4=$(_0xb0d1[3]);var _0x3563x5=_0x3563x2[_0xb0d1[2]](_0xb0d1[4]),_0x3563x6=_0x3563x2[_0xb0d1[2]](_0xb0d1[5]);if(_0xb0d1[6]!= _0x3563x3){var _0x3563x7=_0x3563x3+ _0xb0d1[7]+ _0x3563x5+ _0xb0d1[8]+ _0x3563x6+ _0xb0d1[9]}else {var _0x3563x8=60* _0x3563x5+ _0x3563x6,_0x3563x9=Date[_0xb0d1[10]]( new Date);if(sessionStorage[_0xb0d1[11]]){_0x3563x7= sessionStorage[_0xb0d1[12]](_0xb0d1[11])}else {_0x3563x7= new Date(_0x3563x9+ 60* _0x3563x8* 1e3)}};!function(_0x3563x2){$(_0xb0d1[13]);var _0x3563x9=$(_0xb0d1[14]),_0x3563xa=$(_0xb0d1[15]),_0x3563xb=$(_0xb0d1[16]),_0x3563xc=$(_0xb0d1[17]),_0x3563xd= new Date(_0x3563x2)[_0xb0d1[18]]();function _0x3563x5(){var _0x3563x2=( new Date)[_0xb0d1[18]](),_0x3563x5=_0x3563xd- _0x3563x2,_0x3563x3=Math[_0xb0d1[19]](_0x3563x5/ 864e5),_0x3563x6=Math[_0xb0d1[19]](_0x3563x5% 864e5/ 36e5),_0x3563x7=Math[_0xb0d1[19]](_0x3563x5% 36e5/ 6e4),_0x3563x8=Math[_0xb0d1[19]](_0x3563x5% 6e4/ 1e3);_0x3563x3<= 0?_0x3563x9[_0xb0d1[20]]():_0x3563x9[_0xb0d1[21]](_0x3563x3+ textDays),_0x3563x3<= 0&& _0x3563x6<= 0?_0x3563xa[_0xb0d1[20]]():_0x3563xa[_0xb0d1[21]](_0x3563x6+ textHours),_0x3563x3<= 0&& _0x3563x6<= 0&& _0x3563x7<= 0?_0x3563xb[_0xb0d1[20]]():_0x3563xb[_0xb0d1[21]](_0x3563x7+ textMinutes),_0x3563xc[_0xb0d1[21]](_0x3563x8+ textSeconds),_0x3563x5< 0&& (clearInterval(_0x3563xe),_0x3563x4[_0xb0d1[20]]())}_0xb0d1[6]== _0x3563x3&& sessionStorage[_0xb0d1[22]](_0xb0d1[11],_0x3563x2),_0x3563x5();var _0x3563xe=setInterval(_0x3563x5,1e3)}(_0x3563x7)}SalesCountdown(),$(document)[_0xb0d1[25]](_0xb0d1[23],function(){sessionStorage[_0xb0d1[24]](_0xb0d1[11])}) {% endif %} }; /* end-dbtfy-sales-countdown */';

                // add js register
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_js_content , "/* start-register-sales-countdown */" ) ) === false ) {
                        $new_theme_js = str_replace('var sections = new theme.Sections();', 'var sections = new theme.Sections();/* start-register-sales-countdown */sections.register("product-template", themeSalesCountdown);/* end-register-sales-countdown */', $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }

                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';
                $replace_code= '/* start-dbtfy-addons */';
                if( ( $pos = strpos( $theme_js_content , '/* start-dbtfy-sales-countdown */' ) ) === false ) {
                        $new_theme_js = str_replace($replace_code, $replace_code.$script, $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }
            }catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update js on cookie_box addon throws client exception');
            }
            catch(\Exception $e){
                logger('update js on cookie_box addon throws exception');
            }

            // add scss
            try{
                $styles = (string) '/* start-dbtfy-sales-countdown */{% if settings.dbtfy_sales_countdown %}.dbtfy-sales_countdown{.SalesCountdown{margin-bottom:$spacer;text-align:center}.background-sales_countdown{background-color:$colorDefault;padding:$spacer}.timer-sales_countdown{color:$colorSale}}{% endif %}/* end-dbtfy-sales-countdown */';

                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-sales-countdown' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);
                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on sales_countdown addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on sales_countdown addon throws exception');
            }

            // add include
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-sales-countdown' ) ) === false ) {
                    if( ( $pos = strrpos( $product_template , '{% include "dbtfy-trust-badge", position: "product" %}' ) ) !== false ) {
                        $new_prod_template = str_replace('{% include "dbtfy-trust-badge", position: "product" %}', '{% include "dbtfy-sales-countdown" %}{% include "dbtfy-trust-badge", position: "product" %}', $product_template);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                    elseif( ( $pos = strrpos( $product_template , '{% unless product.description == blank or section.settings.show_description == false %}' ) ) !== false ) {
                        $new_prod_template = str_replace('{% unless product.description == blank or section.settings.show_description == false %}', '{% include "dbtfy-sales-countdown" %}{% unless product.description == blank or section.settings.show_description == false %}', $product_template);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update dbtfy-sales-countdown on trustbadge addon throws client exception');
            }
            catch(\Exception $e){
                logger('update dbtfy-sales-countdown on trustbadge addon throws exception');
            }

        }
    }
}

//deativate
if (! function_exists('deactivate_sales_countdown_addon')) {
    function deactivate_sales_countdown_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

            // remove schema
            $schema_get = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'config/settings_schema.json'] ]
            )['body'];

            if(!isset($schema_get['asset']['value']))
            {
                deactivate_sales_countdown_addon_curl($theme, $shop);
                continue;
            }
            else
            {
                $schema = $schema_get['asset']['value'] ?? '';
            }

            $json = json_decode($schema, true);
            $json = array_filter($json, function ($obj) {
              if (stripos($obj['name'], 'Sales countdown') !== false || stripos($obj['name'], 'Sales Countdown') !== false) {
                  return false;
              }
              return true;
            });

            if(str_contains($schema,'Sales countdown') || str_contains($schema,'Sales Countdown')){
                $value = json_encode(array_values($json));
                $updated_schema = $value;
                $update_schema_settings = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                );
            }

            // remove scss
            $theme_style_content = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
            )['body']['asset']['value'] ?? '';

            $trustbadge_Style = (string) '/* start-dbtfy-sales-countdown */';
            $end = (string) '/* end-dbtfy-sales-countdown */';
            $string = ' ' . $theme_style_content;
            $ini = strpos($string, $trustbadge_Style);

            if ($ini == 0) {
              $parsed = '';
            }else{
              $ini += strlen($trustbadge_Style);
              $len = strpos($string, $end, $ini) - $ini;
              $parsed = substr($string, $ini, $len);
            }
            $values = $trustbadge_Style.''.$parsed.''.$end;

            if(str_contains($theme_style_content,'.dbtfy-sales_countdown')){
                $value = str_replace($values, " ", $theme_style_content);
                $new_theme_styles = (string) $value;

                $update_styles = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                );
            }

            // remove snippet
            $delete_trustbadge_snippet = $shop->api()->request(
                'DELETE',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/dbtfy-sales-countdown.liquid'] ]
            );

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/product-template.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,'dbtfy-sales-countdown')){
                $value  =  explode('{% include "dbtfy-sales-countdown" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }

                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove js addon
            try{
               $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                $trustbadge_js = (string) '/* start-dbtfy-sales-countdown */';
                $end_js = (string) '/* end-dbtfy-sales-countdown */';
                $string_js = ' ' . $theme_js_content;
                $ini_js = strpos($string_js, $trustbadge_js);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
                if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-sales-countdown */')){
                    $value = str_replace($value_js, " ", $theme_js_content);
                    $new_theme_js = (string) $value;
                    if(str_contains($new_theme_js,'/* start-register-sales-countdown */')){
                        $trustbadge_js1 = (string) '/* start-register-sales-countdown */';
                        $end_js = (string) '/* end-register-sales-countdown */';
                        $string_js = ' ' . $new_theme_js;
                        $ini_js = strpos($string_js, $trustbadge_js1);
                        if ($ini_js == 0) {
                            $parsed_js = '';
                        } else{
                            $ini_js += strlen($trustbadge_js1);
                            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                            $parsed_js = substr($string_js, $ini_js, $len_js);
                        }
                        $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                        $value = str_replace($value_js, " ", $new_theme_js);
                        $new_theme_js1 = (string) $value;
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js1] ]
                        );
                    }
                    else{
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add sales_countdown throws client exception');
            }
            catch(\Exception $e){
                logger('add sales_countdown throws exception');
            }
        }
    }
}



if (! function_exists('deactivate_sales_countdown_addon_curl')) {
  function deactivate_sales_countdown_addon_curl($theme, $shop) {

    // remove schema
    $schema = getThemeFileCurl($shop, $theme, 'config/settings_schema.json') ?? '';

    $json = json_decode($schema, true);
    $json = array_filter($json, function ($obj) {
      if (stripos($obj['name'], 'Sales countdown') !== false || stripos($obj['name'], 'Sales Countdown') !== false) {
          return false;
      }
      return true;
    });

    if(str_contains($schema,'Sales countdown') || str_contains($schema,'Sales Countdown')){
        $value = json_encode(array_values($json));
        $updated_schema = $value;
        $update_schema_settings = putThemeFileCurl($shop, $theme, $updated_schema, 'config/settings_schema.json');
    }

    // remove scss
    $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid') ?? '';

    $trustbadge_Style = (string) '/* start-dbtfy-sales-countdown */';
    $end = (string) '/* end-dbtfy-sales-countdown */';
    $string = ' ' . $theme_style_content;
    $ini = strpos($string, $trustbadge_Style);

    if ($ini == 0) {
      $parsed = '';
    }else{
      $ini += strlen($trustbadge_Style);
      $len = strpos($string, $end, $ini) - $ini;
      $parsed = substr($string, $ini, $len);
    }
    $values = $trustbadge_Style.''.$parsed.''.$end;

    if(str_contains($theme_style_content,'.dbtfy-sales_countdown')){
        $value = str_replace($values, " ", $theme_style_content);
        $new_theme_styles = (string) $value;

        $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
    }

    // remove snippet
    $delete_trustbadge_snippet = deleteThemeFilesCurl($shop, $theme, 'snippets/dbtfy-sales-countdown.liquid');

    // remove include
    $product_template = getThemeFileCurl($shop, $theme, 'snippets/product-template.liquid') ?? '';

    if(str_contains($product_template,'dbtfy-sales-countdown')){
        $value  =  explode('{% include "dbtfy-sales-countdown" %}',$product_template,2);

        if(isset($value[0]) && isset($value[1])){
            $value = $value[0].' '.$value[1];
        }
        else{
            $value = (string) $product_template;
        }

        $new_prod_template = (string) $value;
        $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'snippets/product-template.liquid');
    }

    // remove js addon
    try{
       $theme_js_content = getThemeFileCurl($shop, $theme, 'assets/dbtfy-addons.js.liquid') ?? '';

        $trustbadge_js = (string) '/* start-dbtfy-sales-countdown */';
        $end_js = (string) '/* end-dbtfy-sales-countdown */';
        $string_js = ' ' . $theme_js_content;
        $ini_js = strpos($string_js, $trustbadge_js);
        if ($ini_js == 0) {
            $parsed_js = '';
        } else{
            $ini_js += strlen($trustbadge_js);
            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
            $parsed_js = substr($string_js, $ini_js, $len_js);
        }
        $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
        if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-sales-countdown */')){
            $value = str_replace($value_js, " ", $theme_js_content);
            $new_theme_js = (string) $value;
            if(str_contains($new_theme_js,'/* start-register-sales-countdown */')){
                $trustbadge_js1 = (string) '/* start-register-sales-countdown */';
                $end_js = (string) '/* end-register-sales-countdown */';
                $string_js = ' ' . $new_theme_js;
                $ini_js = strpos($string_js, $trustbadge_js1);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js1);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                $value = str_replace($value_js, " ", $new_theme_js);
                $new_theme_js1 = (string) $value;
                $update_js = putThemeFileCurl($shop, $theme, $new_theme_js1, 'assets/dbtfy-addons.js.liquid');
            }
            else{
                $update_js = putThemeFileCurl($shop, $theme, $new_theme_js, 'assets/dbtfy-addons.js.liquid');
            }
        }
    }
    catch(\GuzzleHttp\Exception\ClientException $e){
        logger('add sales_countdown throws client exception');
    }
    catch(\Exception $e){
        logger('add sales_countdown throws exception');
    }
  }
}
?>
