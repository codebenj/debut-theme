<?php
//activate
if (! function_exists('activate_cart_countdown_addon')) {
    function activate_cart_countdown_addon($StoreThemes, $shop) {
        foreach ($StoreThemes as $theme) {

            // Update schema file
            try{
                $schema = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json'] ]
                )['body']['asset']['value'] ?? '';

                $liveview_addon_schema = (string) '
                {
                    "name": "Cart countdown",
                    "settings": [
                      {
                        "type": "header",
                        "content": "Activation"
                      },
                      {
                        "type": "checkbox",
                        "id": "dbtfy_cart_countdown",
                        "label": "Activate",
                        "default": false
                      },
                      {
                        "type": "header",
                        "content": "Text Settings"
                      },
                      {
                        "type": "text",
                        "id": "dbtfy_cart_countdown_icon",
                        "label": "Icon",
                        "default": "check-circle",
                        "info": "Enter the name of any free solid icons on [FontAwesome](https:\/\/fontawesome.com\/icons?d=gallery&s=solid&m=free)"
                      },
                      {
                        "type": "text",
                        "id": "dbtfy_cart_countdown_prefix",
                        "label": "Prefix",
                        "default": "Your cart is saved for the next"
                      },
                      {
                        "type": "text",
                        "id": "dbtfy_cart_countdown_suffix",
                        "label": "Suffix"
                      },
                      {
                        "type": "header",
                        "content": "Timer Settings"
                      },
                      {
                        "type": "range",
                        "id": "dbtfy_cart_countdown_time_mins",
                        "label": "Minutes",
                        "min": 1,
                        "max": 59,
                        "step": 1,
                        "default": 5
                      },
                      {
                        "type": "header",
                        "content": "Translation Settings"
                      },
                      {
                        "type": "text",
                        "id": "dbtfy_cart_countdown_m",
                        "label": "Minutes",
                        "default": "m"
                      },
                      {
                        "type": "text",
                        "id": "dbtfy_cart_countdown_s",
                        "label": "Seconds",
                        "default": "s"
                      }
                    ]
                  }';

                if( ( $badgePos = strpos( $schema , 'dbtfy_cart_countdown' ) ) === false ) {
                    if( ( $pos = strrpos( $schema , ']' ) ) !== false ) {
                        $updated_schema    = substr_replace( $schema , ",".$liveview_addon_schema."]" , $pos );
                        $update_schema_settings = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update schema on cart countdown addon throws client exception');
            }
            catch(\Exception $e){
                logger('update schema on cart countdown addon throws exception');
            }

            // add snippet
            try{
                $snippet = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
                {%- if settings.dbtfy_cart_countdown -%}
                <div class="dbtfy dbtfy-cart_countdown"
                     data-minutes="{{settings.dbtfy_cart_countdown_time_mins}}"
                     data-cartcount="{{ cart.item_count }}">
                  <div id="CartCountdown" class="CartCountdown" style="display:none;">
                    {% unless settings.dbtfy_cart_countdown_icon == blank %}
                    <span class="fas fa-{{ settings.dbtfy_cart_countdown_icon }}"></span>
                    {% endunless %}
                    <span class="text-cart_coutdown prefix-cart_countdown">{{ settings.dbtfy_cart_countdown_prefix }}</span>
                    <strong class="timer-cart_countdown">
                      <span class="minutes-cart_countdown"></span>
                      <span class="seconds-cart_countdown"></span>
                    </strong>
                    <span class="text-cart_coutdown suffix-cart_countdown">{{ settings.dbtfy_cart_countdown_suffix }}</span>
                  </div>
                </div>
                {%- endif -%}';

                $snippet = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $snippet);

                $create_trustbadge_snippet = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/dbtfy-cart-countdown.liquid', 'value' => $snippet] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add Addtocart_animation throws client exception');
            }
            catch(\Exception $e){
                logger('add Addtocart_animation throws exception');
            }

            // add js addon
            try{
              $script= (string)'/* start-dbtfy-cart-countdown */ function themeCartCountdown(){ {% if settings.dbtfy_cart_countdown %} var textMinutes = "{{settings.dbtfy_cart_countdown_m}}"; var textSeconds = "{{settings.dbtfy_cart_countdown_s}}"; var _0x4493=["\x2E\x64\x62\x74\x66\x79\x2D\x63\x61\x72\x74\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x2E\x43\x61\x72\x74\x43\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x62\x75\x74\x74\x6F\x6E\x2E\x61\x6A\x61\x78\x63\x61\x72\x74\x5F\x5F\x71\x74\x79\x2D\x2D\x6D\x69\x6E\x75\x73","\x66\x6F\x72\x6D\x5B\x61\x63\x74\x69\x6F\x6E\x5E\x3D\x22\x2F\x63\x61\x72\x74\x2F\x61\x64\x64\x22\x5D","\x63\x61\x72\x74\x63\x6F\x75\x6E\x74","\x64\x61\x74\x61","\x68\x69\x64\x65","\x63\x61\x72\x74\x2D\x63\x6F\x75\x74\x64\x6F\x77\x6E\x2D\x61\x63\x74\x69\x76\x65","\x72\x65\x6D\x6F\x76\x65\x43\x6C\x61\x73\x73","\x62\x6F\x64\x79","\x63\x61\x72\x74\x5F\x65\x6E\x64\x74\x69\x6D\x65","\x72\x65\x6D\x6F\x76\x65\x49\x74\x65\x6D","\x2E\x74\x69\x6D\x65\x72\x2D\x63\x61\x72\x74\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x2E\x6D\x69\x6E\x75\x74\x65\x73\x2D\x63\x61\x72\x74\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x2E\x73\x65\x63\x6F\x6E\x64\x73\x2D\x63\x61\x72\x74\x5F\x63\x6F\x75\x6E\x74\x64\x6F\x77\x6E","\x67\x65\x74\x54\x69\x6D\x65","\x66\x6C\x6F\x6F\x72","\x73\x68\x6F\x77","\x74\x65\x78\x74","\x73\x65\x74\x49\x74\x65\x6D","\x61\x64\x64\x43\x6C\x61\x73\x73","\x67\x65\x74\x49\x74\x65\x6D","\x73\x75\x62\x6D\x69\x74","\x6D\x69\x6E\x75\x74\x65\x73","\x70\x61\x72\x73\x65","\x6F\x6E","\x61\x6A\x61\x78\x43\x61\x72\x74\x2E\x61\x66\x74\x65\x72\x43\x61\x72\x74\x4C\x6F\x61\x64","\x69\x74\x65\x6D\x5F\x63\x6F\x75\x6E\x74","\x23\x70\x72\x6F\x64\x75\x63\x74\x52\x65\x63\x6F\x6D\x6D\x65\x6E\x64\x61\x74\x69\x6F\x6E\x73\x53\x65\x63\x74\x69\x6F\x6E","\x2E\x70\x72\x6F\x64\x75\x63\x74\x2D\x72\x65\x63\x6F\x6D\x6D\x65\x6E\x64\x61\x74\x69\x6F\x6E\x73"];function CartCountdown(){var _0x888ax2,_0x888ax3=$(_0x4493[0]),_0x888ax4=$(_0x4493[1]),_0x888ax5=($(_0x4493[2]),$(_0x4493[3])),_0x888ax6=_0x888ax3[_0x4493[5]](_0x4493[4]);function _0x888ax7(){clearInterval(_0x888ax2),_0x888ax4[_0x4493[6]](),$(_0x4493[9])[_0x4493[8]](_0x4493[7]),sessionStorage[_0x4493[11]](_0x4493[10])}function _0x888ax8(_0x888ax5){$(_0x4493[12]);var _0x888ax8=$(_0x4493[13]),_0x888ax9=$(_0x4493[14]),_0x888axa= new Date(_0x888ax5)[_0x4493[15]]();function _0x888ax6(_0x888ax5){var _0x888ax6=( new Date)[_0x4493[15]](),_0x888ax2=_0x888axa- _0x888ax6,_0x888ax3=Math[_0x4493[16]](_0x888ax2% 36e5/ 6e4),_0x888ax4=Math[_0x4493[16]](_0x888ax2% 6e4/ 1e3);_0x888ax3<= 0?_0x888ax8[_0x4493[6]]():(_0x888ax8[_0x4493[17]](),_0x888ax8[_0x4493[18]](_0x888ax3+ textMinutes)),_0x888ax9[_0x4493[18]](_0x888ax4+ textSeconds),1!= _0x888ax5&& _0x888ax2< 0&& _0x888ax7()}sessionStorage[_0x4493[19]](_0x4493[10],_0x888ax5),_0x888ax6(1),_0x888ax2= setInterval(_0x888ax6,1e3),_0x888ax4[_0x4493[17]](),$(_0x4493[9])[_0x4493[20]](_0x4493[7])}sessionStorage[_0x4493[10]]&& _0x888ax8(sessionStorage[_0x4493[21]](_0x4493[10])),_0x888ax5[_0x4493[25]](_0x4493[22],function(_0x888ax5){var _0x888ax6,_0x888ax2;sessionStorage[_0x4493[10]]|| (_0x888ax6= _0x888ax3[_0x4493[5]](_0x4493[23]),_0x888ax2= Date[_0x4493[24]]( new Date),_0x888ax8( new Date(_0x888ax2+ 60* _0x888ax6* 1e3)))}),$(_0x4493[9])[_0x4493[25]](_0x4493[26],function(_0x888ax5,_0x888ax6){_0x888ax6[_0x4493[27]]|| _0x888ax7()}),0== _0x888ax6&& _0x888ax7()}function checkProductRecommendation(_0x888ax6){var _0x888ax2;$(_0x4493[28])[0]?(_0x888ax2= 1,function _0x888ax5(){$(_0x4493[29])[0]?_0x888ax6():setTimeout(function(){10== _0x888ax2?_0x888ax6():(_0x888ax2++,_0x888ax5())},100)}()):_0x888ax6()}checkProductRecommendation(CartCountdown) {% endif %} }; /* end-dbtfy-cart-countdown */';


                // add js register
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_js_content , "/* start-register-cart-countdown */" ) ) === false ) {
                        $new_theme_js = str_replace('var sections = new theme.Sections();', 'var sections = new theme.Sections();/* start-register-cart-countdown */themeCartCountdown();/* end-register-cart-countdown */', $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }

                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';
                $replace_code= '/* start-dbtfy-addons */';
                if( ( $pos = strpos( $theme_js_content , 'start-dbtfy-cart-countdown' ) ) === false ) {
                        $new_theme_js = str_replace($replace_code, $replace_code.$script, $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }
            }catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update js on cart countdown addon throws client exception');
            }
            catch(\Exception $e){
                logger('update js on cart countdown addon throws exception');
            }

            // add scss
            try{
                $styles = (string) '/* start-dbtfy-cart-countdown */{% if settings.dbtfy_cart_countdown %}.dbtfy-cart_countdown{.CartCountdown{position: absolute;top:0;left:0;right:0;width:100%;height:$heightInputSmall;text-align:center;background-color: $colorDefault;padding: 0 $gutter-sm;z-index: $zindexOverBody;@include display-flexbox();@include justify-content(Center);@include align-items(center);.fas{padding-right: $spacer-xs;}#CartDrawer &{background-color: $colorDrawerDefault;color: $colorDrawerText;}}.text-cart_coutdown{white-space: nowrap;overflow: hidden;text-overflow: ellipsis;}.timer-cart_countdown{color:$colorSecondary;padding: 0 $spacer-xs;@include flex-shrink(0);#CartDrawer &{color:$colorDrawerPrimary;}} }.template-cart{.main-content{position:relative;}&.cart-coutdown-active .section-header{margin-top:$heightInputSmall;}}.cart-coutdown-active .ajaxcart__inner{margin-top: $heightInputSmall;}{% endif %}/* end-dbtfy-cart-countdown */';

                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-cart-countdown' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);
                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on Addtocart_animation addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on Addtocart_animation addon throws exception');
            }

            // add include ajax-cart-template.liqiud
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-cart-countdown' ) ) === false ) {
                    if( ( $pos = strrpos( $product_template , '<div id="CartContainer" class="drawer__cart"></div>' ) ) !== false ) {
                        $new_prod_template = str_replace('<div id="CartContainer" class="drawer__cart"></div>', '{% include "dbtfy-cart-countdown" %}<div id="CartContainer" class="drawer__cart"></div>', $product_template);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update cart countdown include throws client exception');
            }
            catch(\Exception $e){
                logger('update cart countdown include throws exception');
            }

            // add include cart.liquid
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'templates/cart.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-cart-countdown' ) ) === false ) {
                    if( ( $pos = strpos( $product_template , '<div class="grid">' ) ) !== false ) {
                        // search for first instance of </a>
                        $new_prod_template = preg_replace('/<div class="grid">/', '{% include "dbtfy-cart-countdown" %}<div class="grid">', $product_template, 1);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'templates/cart.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update cart countdown include throws client exception');
            }
            catch(\Exception $e){
                logger('update cart countdown include throws exception');
            }

        }
    }
}

//deativate
if (! function_exists('deactivate_cart_countdown_addon')) {
    function deactivate_cart_countdown_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

            // remove schema
            $schema_get = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'config/settings_schema.json'] ]
            )['body'];

            if(!isset($schema_get['asset']['value']))
            {
                deactivate_cart_countdown_addon_curl($theme, $shop);
                continue;
            }
            else
            {
                $schema = $schema_get['asset']['value'];
            }

            $json = json_decode($schema, true);
            $json = array_filter($json, function ($obj) {
              if (stripos($obj['name'], 'Cart countdown') !== false) {
                  return false;
              }
              return true;
            });

            if(str_contains($schema,'Cart countdown')){
                $value = json_encode(array_values($json));
                $updated_schema = $value;
                $update_schema_settings = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                );
            }

            // remove scss
            $theme_style_content = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
            )['body'] ?? '';
            if (isset($theme_style_content['asset'])) {
                $theme_style_content = $theme_style_content['asset']['value'];
            } else {
                continue;
            }

            $trustbadge_Style = (string) '/* start-dbtfy-cart-countdown */';
            $end = (string) '/* end-dbtfy-cart-countdown */';
            $string = ' ' . $theme_style_content;
            $ini = strpos($string, $trustbadge_Style);

            if ($ini == 0) {
              $parsed = '';
            }else{
              $ini += strlen($trustbadge_Style);
              $len = strpos($string, $end, $ini) - $ini;
              $parsed = substr($string, $ini, $len);
            }
            $values = $trustbadge_Style.''.$parsed.''.$end;

            if(str_contains($theme_style_content,'.dbtfy-cart_countdown')){
                $value = str_replace($values, " ", $theme_style_content);
                $new_theme_styles = (string) $value;

                $update_styles = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                );
            }

            // remove snippet
            $delete_trustbadge_snippet = $shop->api()->request(
                'DELETE',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/dbtfy-cart-countdown.liquid'] ]
            );

            // remove include - theme.liquid
             $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'layout/theme.liquid'] ]
            )['body']['asset']['value'] ?? '';
            if(str_contains($product_template,'dbtfy-cart-countdown')){
                $value  =  explode('{% include "dbtfy-cart-countdown" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }

                 $new_prod_template = (string) $value;
                     $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove include - cart.liquid
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'templates/cart.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,'dbtfy-cart-countdown')){
                $value  =  explode('{% include "dbtfy-cart-countdown" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }

                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'templates/cart.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove js addon
            try{
               $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                $trustbadge_js = (string) '/* start-dbtfy-cart-countdown */';
                $end_js = (string) '/* end-dbtfy-cart-countdown */';
                $string_js = ' ' . $theme_js_content;
                $ini_js = strpos($string_js, $trustbadge_js);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
                if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-cart-countdown */')){
                    $value = str_replace($value_js, " ", $theme_js_content);
                    $new_theme_js = (string) $value;
                    if(str_contains($new_theme_js,'/* start-register-cart-countdown */')){
                        $trustbadge_js1 = (string) '/* start-register-cart-countdown */';
                        $end_js = (string) '/* end-register-cart-countdown */';
                        $string_js = ' ' . $new_theme_js;
                        $ini_js = strpos($string_js, $trustbadge_js1);
                        if ($ini_js == 0) {
                            $parsed_js = '';
                        } else{
                            $ini_js += strlen($trustbadge_js1);
                            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                            $parsed_js = substr($string_js, $ini_js, $len_js);
                        }
                        $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                        $value = str_replace($value_js, " ", $new_theme_js);
                        $new_theme_js1 = (string) $value;
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js1] ]
                        );
                    }
                    else{
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add cart_countdown throws client exception');
            }
            catch(\Exception $e){
                logger('add cart_countdown throws exception');
            }
        }
    }
}


if (! function_exists('deactivate_cart_countdown_addon_curl')) {
    function deactivate_cart_countdown_addon_curl($theme, $shop) {


        // remove schema
        $schema = getThemeFileCurl($shop, $theme, 'config/settings_schema.json');

        $json = json_decode($schema, true);
        $json = array_filter($json, function ($obj) {
          if (stripos($obj['name'], 'Cart countdown') !== false) {
              return false;
          }
          return true;
        });

        if(str_contains($schema,'Cart countdown')){
            $value = json_encode(array_values($json));
            $updated_schema = $value;

            putThemeFileCurl($shop, $theme, $updated_schema, 'config/settings_schema.json');
        }

        // remove scss
        $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid');

        $trustbadge_Style = (string) '/* start-dbtfy-cart-countdown */';
        $end = (string) '/* end-dbtfy-cart-countdown */';
        $string = ' ' . $theme_style_content;
        $ini = strpos($string, $trustbadge_Style);

        if ($ini == 0) {
          $parsed = '';
        }else{
          $ini += strlen($trustbadge_Style);
          $len = strpos($string, $end, $ini) - $ini;
          $parsed = substr($string, $ini, $len);
        }
        $values = $trustbadge_Style.''.$parsed.''.$end;

        if(str_contains($theme_style_content,'.dbtfy-cart_countdown')){
            $value = str_replace($values, " ", $theme_style_content);
            $new_theme_styles = (string) $value;

            $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
        }

        // remove snippet
        $delete_trustbadge_snippet = deleteThemeFilesCurl($shop, $theme, 'snippets/dbtfy-cart-countdown.liquid');

        // remove include - theme.liquid
        $product_template = getThemeFileCurl($shop, $theme, 'layout/theme.liquid');
        if(str_contains($product_template,'dbtfy-cart-countdown')){
            $value  =  explode('{% include "dbtfy-cart-countdown" %}',$product_template,2);

            if(isset($value[0]) && isset($value[1])){
                $value = $value[0].' '.$value[1];
            }
            else{
                $value = (string) $product_template;
            }

            $new_prod_template = (string) $value;
            $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'layout/theme.liquid');
        }

        // remove include - cart.liquid
        $product_template = getThemeFileCurl($shop, $theme, 'templates/cart.liquid');

        if(str_contains($product_template,'dbtfy-cart-countdown')){
            $value  =  explode('{% include "dbtfy-cart-countdown" %}',$product_template,2);

            if(isset($value[0]) && isset($value[1])){
                $value = $value[0].' '.$value[1];
            }
            else{
                $value = (string) $product_template;
            }

            $new_prod_template = (string) $value;
            $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'templates/cart.liquid');
        }

        // remove js addon
        try{
           $theme_js_content = getThemeFileCurl($shop, $theme, 'assets/dbtfy-addons.js.liquid');
            if ($theme_js_content == null)
            {
                $theme_js_content = '';
            }
            $trustbadge_js = (string) '/* start-dbtfy-cart-countdown */';
            $end_js = (string) '/* end-dbtfy-cart-countdown */';
            $string_js = ' ' . $theme_js_content;
            $ini_js = strpos($string_js, $trustbadge_js);
            if ($ini_js == 0) {
                $parsed_js = '';
            } else{
                $ini_js += strlen($trustbadge_js);
                $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                $parsed_js = substr($string_js, $ini_js, $len_js);
            }
            $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
            if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-cart-countdown */')){
                $value = str_replace($value_js, " ", $theme_js_content);
                $new_theme_js = (string) $value;
                if(str_contains($new_theme_js,'/* start-register-cart-countdown */')){
                    $trustbadge_js1 = (string) '/* start-register-cart-countdown */';
                    $end_js = (string) '/* end-register-cart-countdown */';
                    $string_js = ' ' . $new_theme_js;
                    $ini_js = strpos($string_js, $trustbadge_js1);
                    if ($ini_js == 0) {
                        $parsed_js = '';
                    } else{
                        $ini_js += strlen($trustbadge_js1);
                        $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                        $parsed_js = substr($string_js, $ini_js, $len_js);
                    }
                    $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                    $value = str_replace($value_js, " ", $new_theme_js);
                    $new_theme_js1 = (string) $value;
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js1, 'assets/dbtfy-addons.js.liquid');
                }
                else{
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js, 'assets/dbtfy-addons.js.liquid');
                }
            }
        }
        catch(\GuzzleHttp\Exception\ClientException $e){
            logger('add cart_countdown throws client exception');
        }
        catch(\Exception $e){
            logger('add cart_countdown throws exception');
        }

    }
}
?>
