<?php
//activate
if (! function_exists('activate_pageTransition_addon')) {
    function activate_pageTransition_addon($StoreThemes, $shop) {
        foreach ($StoreThemes as $theme) {

            // Update schema file
            try{
                $schema = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json'] ]
                )['body']['asset']['value'] ?? '';

                $liveview_addon_schema = (string) '
                {
                    "name": "Page Transition",
                    "settings": [
                      {
                        "type": "checkbox",
                        "id": "dbtfy_page_transition",
                        "label": "Activate",
                        "default": true
                      },
                      {
                        "type": "text",
                        "id": "dbtfy_page_transition_width",
                        "label": "Image Size"
                      },
                      {
                        "type": "image_picker",
                        "id": "dbtfy_page_transition_image",
                        "label": "Image"
                      }
                    ]
                  }';

                if( ( $badgePos = strpos( $schema , 'dbtfy-age-check' ) ) === false ) {
                    if( ( $pos = strrpos( $schema , ']' ) ) !== false ) {
                        $updated_schema    = substr_replace( $schema , ",".$liveview_addon_schema."]" , $pos );
                        $update_schema_settings = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update schema on page transition addon throws client exception');
            }
            catch(\Exception $e){
                logger('update schema on page transition addon throws exception');
            }

            // add snippet
            try{
                $snippet = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
                    {%- if settings.dbtfy_page_transition -%}
                        {% assign image_size = settings.dbtfy_page_transition_width | append: \'x\' %}
                        <div class="dbtfy dbtfy-page_transition">
                            {%- if settings.dbtfy_page_transition_image != blank -%}
                            <img class="pt-image animated pulse slow infinite" src="{{ settings.dbtfy_page_transition_image | img_url: image_size }}"
                                srcset="{{ settings.dbtfy_page_transition_image | img_url: image_size }} 1x, {{ settings.dbtfy_page_transition_image | img_url: image_size, scale: 2 }} 2x"
                                alt="{{ settings.dbtfy_page_transition_image.alt }}">
                            {%- endif -%}
                        </div>
                    {%- endif -%}';

                $snippet = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $snippet);

                $create_pageTransition_snippet = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/dbtfy-page-transition.liquid', 'value' => $snippet] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add page_transition throws client exception');
            }
            catch(\Exception $e){
                logger('add page_transition throws exception');
            }

            // add js addon
            try{
                $script= (string)'/* start-dbtfy-page-transition */ function themePageTransition() { {%- if settings.dbtfy_page_transition -%} var _0xee7b=["\x2E\x64\x62\x74\x66\x79\x2D\x70\x61\x67\x65\x5F\x74\x72\x61\x6E\x73\x69\x74\x69\x6F\x6E","\x71\x75\x65\x72\x79\x53\x65\x6C\x65\x63\x74\x6F\x72","\x6C\x6F\x61\x64","\x70\x74\x2D\x68\x69\x64\x64\x65\x6E","\x61\x64\x64","\x63\x6C\x61\x73\x73\x4C\x69\x73\x74","\x61\x64\x64\x45\x76\x65\x6E\x74\x4C\x69\x73\x74\x65\x6E\x65\x72","\x62\x65\x66\x6F\x72\x65\x75\x6E\x6C\x6F\x61\x64","\x72\x65\x6D\x6F\x76\x65"];function PageTransition(){const _0x9c63x2=document[_0xee7b[1]](_0xee7b[0]);_0x9c63x2&& (window[_0xee7b[6]](_0xee7b[2],()=>{_0x9c63x2[_0xee7b[5]][_0xee7b[4]](_0xee7b[3])}),window[_0xee7b[6]](_0xee7b[7],()=>{_0x9c63x2[_0xee7b[5]][_0xee7b[8]](_0xee7b[3])}))}PageTransition() {%- endif -%} } /* end-dbtfy-page-transition */';

                // add js register
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_js_content , " /* start-register-page-transition */" ) ) === false ) {
                    $new_theme_js = str_replace('var sections = new theme.Sections();', 'var sections = new theme.Sections(); /* start-register-page-transition */themePageTransition();/* end-register-page-transition */', $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }

                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';
                $replace_code= '/* start-dbtfy-addons */';
                if( ( $pos = strpos( $theme_js_content , 'start-dbtfy-page-transition' ) ) === false ) {
                    $new_theme_js = str_replace($replace_code, $replace_code.$script, $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update js on page transition addon throws client exception');
            }
            catch(\Exception $e){
                logger('update js on page transition addon throws exception');
            }


            // add scss
            try{
                $styles = (string) '/* start-dbtfy-page-transition */.dbtfy-page_transition{position:fixed;top:0;left:0;z-index:$zindexDrawer+$zindexIncrement;width:100vw;height:100vh;background-color:$colorBody;opacity:1;visibility:visible;@include display-flexbox();@include justify-content(center);@include align-items(center);@include transition($transitions);&.pt-hidden{opacity:0;visibility:hidden;pointer-events:none}}/* end-dbtfy-page-transition */';
                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-page-transition' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);
                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on page_transition addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on page_transition addon throws exception');
            }


            // add include
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid'] ]
                )['body']['asset']['value'] ?? '';
                if( ( $pos = strrpos( $product_template , '{% include "dbtfy-page-transition" %}' ) ) === false ) {
                    $new_prod_template = str_replace('</body>', '{% include "dbtfy-page-transition" %} </body>', $product_template);
                    $update_prod_template = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_prod_template] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update page transition on trustbadge addon throws client exception');
            }
            catch(\Exception $e){
                logger('update page transition on trustbadge addon throws exception');
            }

        }
    }
}

// deactivate
if (! function_exists('deactivate_pageTransition_addon')) {
    function deactivate_pageTransition_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

            // remove schema
            $schema_get = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'config/settings_schema.json'] ]
            )['body'];

            if(!isset($schema_get['asset']['value']))
            {
                deactivate_pageTransition_addon_curl($theme, $shop);
                continue;
            }
            else
            {
                $schema = $schema_get['asset']['value'] ?? '';
            }

            $json = json_decode($schema, true);
            $json = array_filter($json, function ($obj) {
                if (stripos($obj['name'], 'Page Transition') !== false) {
                    return false;
                }
                return true;
            });

            if(str_contains($schema,'Page Transition')){
                $value = json_encode(array_values($json));
                $updated_schema = $value;
                $update_schema_settings = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                );
            }

            // remove scss
            $theme_style_content = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
            )['body']['asset']['value'] ?? '';

            $trustbadge_Style = (string) '/* start-dbtfy-page-transition */';
            $end = (string) '/* end-dbtfy-page-transition */';
            $string = ' ' . $theme_style_content;
            $ini = strpos($string, $trustbadge_Style);

            if ($ini == 0) {
                $parsed = '';
            }else{
                $ini += strlen($trustbadge_Style);
                $len = strpos($string, $end, $ini) - $ini;
                $parsed = substr($string, $ini, $len);
            }
            $values = $trustbadge_Style.''.$parsed.''.$end;

            if(str_contains($theme_style_content,'.dbtfy-page_transition')){
                $value = str_replace($values, " ", $theme_style_content);
                $new_theme_styles = (string) $value;

                $update_styles = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                );
            }

            // remove snippet
            $delete_trustbadge_snippet = $shop->api()->request(
                'DELETE',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/dbtfy-page-transition.liquid'] ]
            );

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'layout/theme.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,"dbtfy-page-transition")){
                $value  =  explode('{% include "dbtfy-page-transition" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else {
                    $value = (string) $product_template;
                }

                $new_prod_template = (string) $value;

                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove js addon
            try{
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                $trustbadge_js = (string) '/* start-dbtfy-page-transition */';
                $end_js = (string) '/* end-dbtfy-page-transition */';
                $string_js = ' ' . $theme_js_content;
                $ini_js = strpos($string_js, $trustbadge_js);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
                if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-page-transition */')){
                    $value = str_replace($value_js, " ", $theme_js_content);
                    $new_theme_js = (string) $value;
                    if(str_contains($new_theme_js,'/* start-register-page-transition */')){
                        $trustbadge_js1 = (string) '/* start-register-page-transition */';
                        $end_js = (string) '/* end-register-page-transition */';
                        $string_js = ' ' . $new_theme_js;
                        $ini_js = strpos($string_js, $trustbadge_js1);
                        if ($ini_js == 0) {
                            $parsed_js = '';
                        } else{
                            $ini_js += strlen($trustbadge_js1);
                            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                            $parsed_js = substr($string_js, $ini_js, $len_js);
                        }
                        $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                        $value = str_replace($value_js, " ", $new_theme_js);
                        $new_theme_js1 = (string) $value;
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js1] ]
                        );
                    }
                    else{
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add page_transition throws client exception');
            }
            catch(\Exception $e){
                logger('add page_transition throws exception');
            }

        }
    }
}

// deactivate addon curl
if (! function_exists('deactivate_pageTransition_addon_curl')) {
    function deactivate_pageTransition_addon_curl($theme, $shop)
    {
        // remove schema
        $schema = getThemeFileCurl($shop, $theme, 'config/settings_schema.json') ?? '';

        $json = json_decode($schema, true);
        $json = array_filter($json, function ($obj) {
            if (stripos($obj['name'], 'Page Transition') !== false) {
                return false;
            }
            return true;
        });

        if(str_contains($schema,'Page Transition')){
            $value = json_encode(array_values($json));
            $updated_schema = $value;
            $update_schema_settings = putThemeFileCurl($shop, $theme, $updated_schema, 'config/settings_schema.json');
        }

        // remove scss
        $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid') ?? '';

        $trustbadge_Style = (string) '/* start-dbtfy-page-transition */';
        $end = (string) '/* end-dbtfy-page-transition */';
        $string = ' ' . $theme_style_content;
        $ini = strpos($string, $trustbadge_Style);

        if ($ini == 0) {
            $parsed = '';
        }else{
            $ini += strlen($trustbadge_Style);
            $len = strpos($string, $end, $ini) - $ini;
            $parsed = substr($string, $ini, $len);
        }
        $values = $trustbadge_Style.''.$parsed.''.$end;

        if(str_contains($theme_style_content,'.dbtfy-page_transition')){
            $value = str_replace($values, " ", $theme_style_content);
            $new_theme_styles = (string) $value;

            $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
        }

        // remove snippet
        $delete_trustbadge_snippet = deleteThemeFilesCurl($shop, $theme, 'snippets/dbtfy-page-transition.liquid');

        // remove include
        $product_template = getThemeFileCurl($shop, $theme, 'layout/theme.liquid') ?? '';

        if(str_contains($product_template,"dbtfy-page-transition")){
            $value  =  explode('{% include "dbtfy-page-transition" %}',$product_template,2);

            if(isset($value[0]) && isset($value[1])){
                $value = $value[0].' '.$value[1];
            }
            else {
                $value = (string) $product_template;
            }

            $new_prod_template = (string) $value;

            $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'layout/theme.liquid');
        }

        // remove js addon
        try{
            $theme_js_content = getThemeFileCurl($shop, $theme, 'assets/dbtfy-addons.js.liquid') ?? '';

            $trustbadge_js = (string) '/* start-dbtfy-page-transition */';
            $end_js = (string) '/* end-dbtfy-page-transition */';
            $string_js = ' ' . $theme_js_content;
            $ini_js = strpos($string_js, $trustbadge_js);
            if ($ini_js == 0) {
                $parsed_js = '';
            } else{
                $ini_js += strlen($trustbadge_js);
                $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                $parsed_js = substr($string_js, $ini_js, $len_js);
            }
            $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
            if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-page-transition */')){
                $value = str_replace($value_js, " ", $theme_js_content);
                $new_theme_js = (string) $value;
                if(str_contains($new_theme_js,'/* start-register-page-transition */')){
                    $trustbadge_js1 = (string) '/* start-register-page-transition */';
                    $end_js = (string) '/* end-register-page-transition */';
                    $string_js = ' ' . $new_theme_js;
                    $ini_js = strpos($string_js, $trustbadge_js1);
                    if ($ini_js == 0) {
                        $parsed_js = '';
                    } else{
                        $ini_js += strlen($trustbadge_js1);
                        $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                        $parsed_js = substr($string_js, $ini_js, $len_js);
                    }
                    $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                    $value = str_replace($value_js, " ", $new_theme_js);
                    $new_theme_js1 = (string) $value;
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js1, 'assets/dbtfy-addons.js.liquid');
                }
                else{
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js, 'assets/dbtfy-addons.js.liquid');
                }
            }
        }
        catch(\GuzzleHttp\Exception\ClientException $e){
            logger('add page_transition throws client exception');
        }
        catch(\Exception $e){
            logger('add page_transition throws exception');
        }

    }
}
?>
