<?php
//activate
if (! function_exists('activate_discount_saved_addon')) {
    function activate_discount_saved_addon($StoreThemes, $shop) {
        foreach ($StoreThemes as $theme) {

            // add schema
            try{
                $schema = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json'] ]
                )['body']['asset']['value'] ?? '';

                $liveview_addon_schema = (string) '
  {
    "name": "Discount saved",
    "settings": [
      {
        "type": "header",
        "content": "Activation"
      },
      {
        "type": "checkbox",
        "id": "dbtfy_discount_saved",
        "label": "Activate",
        "default": false
      }
    ]
  }';

                if( ( $badgePos = strpos( $schema , 'dbtfy_discount_saved' ) ) === false ) {
                    if( ( $pos = strrpos( $schema , ']' ) ) !== false ) {
                        $updated_schema    = substr_replace( $schema , ",".$liveview_addon_schema."]" , $pos );
                        $update_schema_settings = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update schema on live view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update schema on live view addon throws exception');
            }

            // add snippet
            try{
                $snippet = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
{%- if settings.dbtfy_discount_saved -%}
<div class="dbtfy dbtfy-discount_saved">
  <div id="DiscountSaved">

    {% for variant in product.variants %}
      {% capture discount_saved %}
        {% if settings.sale_type == "amount" %}
          {{ variant.compare_at_price | minus: variant.price | money_without_trailing_zeros }}
        {% elsif settings.sale_type == "percentage" %}
          {{ variant.compare_at_price | minus: variant.price | times: 100 | divided_by: variant.compare_at_price }}%
        {% endif %}
      {% endcapture %}
      {% if variant.compare_at_price > variant.price %}
      <span style="display:none;" class="number-discount_saved discount_saved-{{ variant.id }}">{{ "products.general.save_html" | t: saved_amount: discount_saved }}</span>
      {% endif %}
    {% endfor %}

  </div>
</div>
{%- endif -%}';

                $snippet = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $snippet);

                $create_trustbadge_snippet = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/dbtfy-discount-saved.liquid', 'value' => $snippet] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add discount_saved throws client exception');
            }
            catch(\Exception $e){
                logger('add discount_saved throws exception');
            }

            // add js addon
            try{
              $script= (string)'/* start-dbtfy-discount-saved */function themeDiscountSaved(container) { {% if settings.dbtfy_discount_saved %} var _0xf9d5=["\x76\x61\x6C","\x23\x50\x72\x6F\x64\x75\x63\x74\x53\x65\x6C\x65\x63\x74\x20\x6F\x70\x74\x69\x6F\x6E\x3A\x73\x65\x6C\x65\x63\x74\x65\x64","\x66\x69\x6E\x64","\x68\x69\x64\x65","\x2E\x6E\x75\x6D\x62\x65\x72\x2D\x64\x69\x73\x63\x6F\x75\x6E\x74\x5F\x73\x61\x76\x65\x64","\x73\x68\x6F\x77","\x2E\x64\x69\x73\x63\x6F\x75\x6E\x74\x5F\x73\x61\x76\x65\x64\x2D","\x63\x68\x61\x6E\x67\x65","\x6F\x6E","\x2E\x70\x72\x6F\x64\x75\x63\x74\x2D\x66\x6F\x72\x6D\x5F\x5F\x69\x6E\x70\x75\x74\x2C\x2E\x73\x69\x6E\x67\x6C\x65\x2D\x6F\x70\x74\x69\x6F\x6E\x2D\x72\x61\x64\x69\x6F"];function DiscountSaved(){var _0xcf3bx2=$(container);function _0xcf3bx3(){var _0xcf3bx3=_0xcf3bx2[_0xf9d5[2]](_0xf9d5[1])[_0xf9d5[0]]();_0xcf3bx2[_0xf9d5[2]](_0xf9d5[4])[_0xf9d5[3]](),_0xcf3bx3&& _0xcf3bx2[_0xf9d5[2]](_0xf9d5[6]+ _0xcf3bx3)[_0xf9d5[5]]()}_0xcf3bx3(),_0xcf3bx2[_0xf9d5[2]](_0xf9d5[9])[_0xf9d5[8]](_0xf9d5[7],function(){_0xcf3bx3()})}DiscountSaved() {% endif %} } /* end-dbtfy-discount-saved */';


                // add js register
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_js_content , "/* start-register-discount-saved */" ) ) === false ) {
                    $new_theme_js = str_replace('var sections = new theme.Sections();','var sections = new theme.Sections();/* start-register-discount-saved */sections.register("product-template", themeDiscountSaved);/* end-register-discount-saved */', $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }

                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';
                $replace_code= '/* start-dbtfy-addons */';
                if( ( $pos = strpos( $theme_js_content , '/* start-dbtfy-discount-saved */' ) ) === false ) {
                    $new_theme_js = str_replace($replace_code, $replace_code.$script, $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }
            }catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update js on cookie_box addon throws client exception');
            }
            catch(\Exception $e){
                logger('update js on cookie_box addon throws exception');
            }

            // add scss
            try{
                $styles = (string) '/* start-dbtfy-discount-saved */{% if settings.dbtfy_discount_saved %}.dbtfy-discount_saved{white-space:nowrap;#DiscountSaved{@include display-flexbox()}.number-discount_saved{@include accentFontStack;text-transform:uppercase;font-size:$baseFontSize-sm;color:$colorSale;border:$borders;border-color:$colorSale;padding:0 $spacer-xs;border-radius:$borderRadius;margin-left:$spacer-xs}}{% endif %}/* end-dbtfy-discount-saved */';

                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-discount-saved' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);
                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on discount_saved addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on discount_saved addon throws exception');
            }

            // add include
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-discount-saved' ) ) === false ) {

                    if( ( $pos = strrpos( $product_template , '{{ current_variant.price | money }}' ) ) !== false ) {
                        
                        $new_prod_template = preg_replace('/{{ current_variant\.price \| money }}\s+<\/span>/', '{{ current_variant.price | money }}
                    </span>
                    {% include "dbtfy-discount-saved" %}', $product_template);

                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update dbtfy-discount-saved on trustbadge addon throws client exception');
            }
            catch(\Exception $e){
                logger('update dbtfy-discount-saved on trustbadge addon throws exception');
            }

        }
    }
}

//deativate
if (! function_exists('deactivate_discount_saved_addon')) {
    function deactivate_discount_saved_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

            // remove schema
            $schema_get = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'config/settings_schema.json'] ]
            )['body'];

            if(!isset($schema_get['asset']['value']))
            {
                deactivate_discount_saved_addon_curl($theme, $shop);
                continue;
            }
            else
            {
                $schema = $schema_get['asset']['value'] ?? '';
            }

            $json = json_decode($schema, true);
            $json = array_filter($json, function ($obj) {
              if (stripos($obj['name'], 'Discount saved') !== false) {
                  return false;
              }
              return true;
            });

            if(str_contains($schema,'Discount saved')){
                $value = json_encode(array_values($json));
                $updated_schema = $value;
                $update_schema_settings = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                );
            }

            // remove scss
            $theme_style_content = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
            )['body']['asset']['value'] ?? '';

            $trustbadge_Style = (string) '/* start-dbtfy-discount-saved */';
            $end = (string) '/* end-dbtfy-discount-saved */';
            $string = ' ' . $theme_style_content;
            $ini = strpos($string, $trustbadge_Style);

            if ($ini == 0) {
              $parsed = '';
            }else{
              $ini += strlen($trustbadge_Style);
              $len = strpos($string, $end, $ini) - $ini;
              $parsed = substr($string, $ini, $len);
            }
            $values = $trustbadge_Style.''.$parsed.''.$end;

            if(str_contains($theme_style_content,'.dbtfy-discount_saved')){
                $value = str_replace($values, " ", $theme_style_content);
                $new_theme_styles = (string) $value;

                $update_styles = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                );
            }

            // remove snippet
            $delete_trustbadge_snippet = $shop->api()->request(
                'DELETE',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/dbtfy-discount-saved.liquid'] ]
            );

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/product-template.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,'dbtfy-discount-saved')){
                $value  =  explode('{% include "dbtfy-discount-saved" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }

                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove js addon
            try{
               $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                $trustbadge_js = (string) '/* start-dbtfy-discount-saved */';
                $end_js = (string) '/* end-dbtfy-discount-saved */';
                $string_js = ' ' . $theme_js_content;
                $ini_js = strpos($string_js, $trustbadge_js);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
                if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-discount-saved */')){
                    $value = str_replace($value_js, " ", $theme_js_content);
                    $new_theme_js = (string) $value;
                    if(str_contains($new_theme_js,'/* start-register-discount-saved */')){
                        $trustbadge_js1 = (string) '/* start-register-discount-saved */';
                        $end_js = (string) '/* end-register-discount-saved */';
                        $string_js = ' ' . $new_theme_js;
                        $ini_js = strpos($string_js, $trustbadge_js1);
                        if ($ini_js == 0) {
                            $parsed_js = '';
                        } else{
                            $ini_js += strlen($trustbadge_js1);
                            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                            $parsed_js = substr($string_js, $ini_js, $len_js);
                        }
                        $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                        $value = str_replace($value_js, " ", $new_theme_js);
                        $new_theme_js1 = (string) $value;
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js1] ]
                        );
                    }
                    else{
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add discount_saved throws client exception');
            }
            catch(\Exception $e){
                logger('add discount_saved throws exception');
            }
        }
    }
}



if (! function_exists('deactivate_discount_saved_addon_curl')) {
    function deactivate_discount_saved_addon_curl($theme, $shop) {

        // remove schema
        $schema = getThemeFileCurl($shop, $theme, 'config/settings_schema.json');

        $json = json_decode($schema, true);
        $json = array_filter($json, function ($obj) {
          if (stripos($obj['name'], 'Discount saved') !== false) {
              return false;
          }
          return true;
        });

        if(str_contains($schema,'Discount saved')){
            $value = json_encode(array_values($json));
            $updated_schema = $value;
            $update_schema_settings = putThemeFileCurl($shop, $theme, $updated_schema, 'config/settings_schema.json');
        }

        // remove scss
        $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid');

        $trustbadge_Style = (string) '/* start-dbtfy-discount-saved */';
        $end = (string) '/* end-dbtfy-discount-saved */';
        $string = ' ' . $theme_style_content;
        $ini = strpos($string, $trustbadge_Style);

        if ($ini == 0) {
          $parsed = '';
        }else{
          $ini += strlen($trustbadge_Style);
          $len = strpos($string, $end, $ini) - $ini;
          $parsed = substr($string, $ini, $len);
        }
        $values = $trustbadge_Style.''.$parsed.''.$end;

        if(str_contains($theme_style_content,'.dbtfy-discount_saved')){
            $value = str_replace($values, " ", $theme_style_content);
            $new_theme_styles = (string) $value;

            $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
        }

        // remove snippet
        $delete_trustbadge_snippet = deleteThemeFilesCurl($shop, $theme, 'snippets/dbtfy-discount-saved.liquid');

        // remove include
        $product_template = getThemeFileCurl($shop, $theme, 'snippets/product-template.liquid');

        if(str_contains($product_template,'dbtfy-discount-saved')){
            $value  =  explode('{% include "dbtfy-discount-saved" %}',$product_template,2);

            if(isset($value[0]) && isset($value[1])){
                $value = $value[0].' '.$value[1];
            }
            else{
                $value = (string) $product_template;
            }

            $new_prod_template = (string) $value;
            $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'snippets/product-template.liquid');
        }

        // remove js addon
        try{
           $theme_js_content = getThemeFileCurl($shop, $theme, 'assets/dbtfy-addons.js.liquid');
            if ($theme_js_content == null)
            {
                $theme_js_content = '';
            }
            $trustbadge_js = (string) '/* start-dbtfy-discount-saved */';
            $end_js = (string) '/* end-dbtfy-discount-saved */';
            $string_js = ' ' . $theme_js_content;
            $ini_js = strpos($string_js, $trustbadge_js);
            if ($ini_js == 0) {
                $parsed_js = '';
            } else{
                $ini_js += strlen($trustbadge_js);
                $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                $parsed_js = substr($string_js, $ini_js, $len_js);
            }
            $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
            if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-discount-saved */')){
                $value = str_replace($value_js, " ", $theme_js_content);
                $new_theme_js = (string) $value;
                if(str_contains($new_theme_js,'/* start-register-discount-saved */')){
                    $trustbadge_js1 = (string) '/* start-register-discount-saved */';
                    $end_js = (string) '/* end-register-discount-saved */';
                    $string_js = ' ' . $new_theme_js;
                    $ini_js = strpos($string_js, $trustbadge_js1);
                    if ($ini_js == 0) {
                        $parsed_js = '';
                    } else{
                        $ini_js += strlen($trustbadge_js1);
                        $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                        $parsed_js = substr($string_js, $ini_js, $len_js);
                    }
                    $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                    $value = str_replace($value_js, " ", $new_theme_js);
                    $new_theme_js1 = (string) $value;
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js1, 'assets/dbtfy-addons.js.liquid');
                }
                else{
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js, 'assets/dbtfy-addons.js.liquid');
                }
            }
        }
        catch(\GuzzleHttp\Exception\ClientException $e){
            logger('add discount_saved throws client exception');
        }
        catch(\Exception $e){
            logger('add discount_saved throws exception');
        }
    }
}
?>
