<?php
use Illuminate\Support\Arr;
//activate
if (! function_exists('activate_quick_view_addon')) {
    function activate_quick_view_addon($StoreThemes, $shop) {
      	foreach ($StoreThemes as $theme) {

            //add schema
            try{
                $schema = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json'] ]
                )['body']['asset']['value'] ?? '';

                $liveview_addon_schema = (string) '
  {
    "name": "Quick view",
    "settings": [
      {
        "type": "header",
        "content": "Activation"
      },
      {
        "type": "checkbox",
        "id": "dbtfy_quick_view",
        "label": "Activate",
        "default": false
      },
      {
        "type": "header",
        "content": "Settings"
      },
      {
        "type": "checkbox",
        "id": "dbtfy_quick_view_hide_mobile",
        "label": "Hide on mobile",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "dbtfy_quick_view_quantity_selector",
        "label": "Show quantity picker",
        "default": false
      },
      {
        "type": "text",
        "id": "quick_view_animation",
        "label": "Animation type",
        "default": "pulse",
        "info": "Enter the name of any animation from [animate.css](https:\/\/daneden.github.io\/animate.css\/)"
      },
      {
        "type": "text",
        "id": "quick_view_icon",
        "label": "Quick view icon",
        "default": "eye",
        "info": "Enter the name of any free solid icons on [FontAwesome](https:\/\/fontawesome.com\/icons?d=gallery&s=solid&m=free)"
      },
      {
        "type": "select",
        "id": "icon_placement",
        "label": "Icon placement",
        "default": "top-right",
        "options": [
          {
            "value": "top-left",
            "label": "Top left"
          },
          {
            "value": "top-right",
            "label": "Top right"
          },
          {
            "value": "bottom-right",
            "label": "Bottom right"
          },
          {
            "value": "bottom-left",
            "label": "Bottom left"
          }
        ]
      }
    ]
  }';

                if( ( $badgePos = strpos( $schema , 'dbtfy_quick_view' ) ) === false ) {
                    if( ( $pos = strrpos( $schema , ']' ) ) !== false ) {
                        $updated_schema = substr_replace( $schema , ",".$liveview_addon_schema."]" , $pos );

                        $update_schema_settings = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update schema on Quick view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update schema on Quick view addon throws exception');
            }

            // add snippet
            try{
                $snippet = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
                {%- if settings.dbtfy_quick_view -%}

                {%- if type == "container" -%}
                  <div id="QuickViewContainer" class="dbtfy dbtfy-quick_view {% if settings.dbtfy_quick_view_hide_mobile %}small--hide{% endif %}"></div>
                {%- else -%}
                  <div class="dbtfy dbtfy-quick_view">
                    <!-- Quick view button -->
                    <div class="tag-wrapper tag-{{ settings.icon_placement }} {% if settings.dbtfy_quick_view_hide_mobile %}small--hide{% endif %}">
                      <button class="qv-icon btn btn-outline-primary btn-square-small" data-section-id="{{ section.id }}" data-product-id="{{ product.id }}">
                        <span class="fas fa-{{ settings.quick_view_icon }}"></span>
                      </button>
                    </div>

                    {%- assign current_variant = product.selected_or_first_available_variant -%}
                    {%- assign featured_image = current_variant.featured_image | default: product.featured_image -%}
                    {%- assign enable_zoom = false -%}
                    {%- assign product_image_zoom_size = "1024x1024" -%}
                    {%- assign product_image_scale = "2" -%}

                    <!-- modal -->
                    <div class="qv-wrapper">
                      <div id="QuickView-{{ section.id }}-{{ product.id }}" class="qv-modal" data-upsell-target-id="{{ product.id }}">
                        <div class="qv-modal-dialog">
                          <div class="qv-modal-content animated {{ settings.quick_view_animation }}">

                            <div class="qv-header">
                              <a href="{{ product.url }}?variant={{ current_variant.id }}" class="qv-title h4">{{ product.title}}</a>
                              <button type="button" class="qv-close-button btn btn-square-small icon-fallback-text">
                                <span class="fas fa-times"></span>
                              </button>
                            </div>

                            <div class="qv-modal-body wrapper-fluid">
                              <div class="qv-grid grid">
                                <!-- photos -->
                                <div class="qv-photos grid__item medium--six-twelfths large--six-twelfths layout-thumbnail">
                                  <div class="qv-slick product-single__photos slick-format slick-format-sm product-thumbnail__photos">

                                    <div class="qv-image-{{featured_image.id}} product-single__photo--flex-wrapper">
                                      <div class="product-single__photo--flex">
                                        <div class="product-single__photo--container">
                                          <div class="product-single__photo-wrapper image-wrapper"
                                               style="padding-top:{{ 1 | divided_by: featured_image.aspect_ratio | times: 100}}%;">
                                            {% assign img_url = featured_image | img_url: "1x1" | replace: "_1x1.", "_{width}x." %}
                                            <img class="product-single__photo image lazyload {{ img_id_class }}"
                                                 data-src="{{ img_url }}"
                                                 data-widths="[180, 360, 590, 720, 900, 1080, 1296, 1512, 1728, 2048]"
                                                 data-aspectratio="{{ featured_image.aspect_ratio }}"
                                                 data-sizes="auto"
                                                 alt="{{ featured_image.alt | escape }}">
                                          </div>

                                        </div>
                                      </div>
                                    </div>

                                    {% for image in product.images %}
                                      {% unless image contains featured_image %}
                                      <div class="qv-image-{{image.id}} product-single__photo--flex-wrapper not-featured-image">
                                        <div class="product-single__photo--flex">
                                          <div class="product-single__photo--container">
                                            <div class="product-single__photo-wrapper image-wrapper"
                                                 style="padding-top:{{ 1 | divided_by: image.aspect_ratio | times: 100}}%;">
                                              {% assign img_url = image | img_url: "1x1" | replace: "_1x1.", "_{width}x." %}
                                              <img class="product-single__photo image lazyload"
                                                   data-src="{{ img_url }}"
                                                   data-widths="[180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 2048]"
                                                   data-aspectratio="{{ image.aspect_ratio }}"
                                                   data-sizes="auto"
                                                   alt="{{ image.alt | escape }}">
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      {% endunless %}
                                    {% endfor %}
                                  </div>

                                  {% if product.images.size > 1 %}
                                  <div class="product-single__thumbnails slick-format slick-format-sm grid grid--small {% if product.images.size < 6  %}slick-disabled{% endif %}" id="ProductThumbs">
                                    <div class="grid__item one-fifth">
                                      <a class="product-single__thumbnail">
                                        <img class="product-single__thumb lazyload" data-src="{{ featured_image.src | img_url: \'150x150\', crop: \'center\' }}" alt="{{ featured_image.alt | escape }}">
                                      </a>
                                    </div>
                                    {% for image in product.images %}
                                    {% unless image contains featured_image %}
                                    <div class="grid__item one-fifth">
                                      <a class="product-single__thumbnail">
                                        <img class="product-single__thumb lazyload" data-src="{{ image.src | img_url: \'150x150\', crop: \'center\' }}" alt="{{ image.alt | escape }}">
                                      </a>
                                    </div>
                                    {% endunless %}
                                    {% endfor %}
                                  </div>
                                  {% endif %}
                                </div>

                                <!-- details -->
                                <div class="qv-details grid__item medium--six-twelfths large--six-twelfths {{variantStatus}}">
                                  <div class="qv-price-wrapper price-wrapper">
                                    <span class="qv-price-compare price-compare" {% unless current_variant.compare_at_price > current_variant.price %}style="display:none;"{% endunless %}>{{ current_variant.compare_at_price | money }}</span>
                                    <span class="qv-price{% if current_variant.compare_at_price > current_variant.price %} on-sale{% endif %}">{{ current_variant.price | money }}</span>
                                  </div>

                                  {% if settings.grid_product_vendor %}
                                  <p class="qv-vendor vendor">{{ product.vendor }}</p>
                                  {% endif %}

                                  {% include "review-badge", badge_template: "grid" %}

                                  {% unless product.description == blank %}
                                  <div class="qv-description rte">
                                    {% assign desc = product.description | strip_html %}
                                    {{ desc | truncatewords: 22 }}
                                    <a href="{{ product.url }}?variant={{ current_variant.id }}" class="text-link continue-link">
                                      {{ "products.product.full_details" | t }} <span class="fas fa-arrow-right"></span>
                                    </a>
                                  </div>
                                  {% endunless %}

                                  {% capture "form_classes" %}add-to-cart__form qv-form product-single__form{% endcapture %}
                                  {% capture "form_id" %}QuickViewForm-{{ product.id }}{% endcapture %}

                                  {% form "product", product, class:form_classes, id:form_id %}
                                    {% unless product.has_only_default_variant %}
                                    <div class="qv-variant-wrapper variant-wrapper grid grid-uniform grid--small">
                                      {% for option in product.options_with_values %}
                                      <div class="grid__item qv-variant-item radio-wrapper product-form__item">
                                        <label class="qv-select-label single-option-radio__label" for="QuickViewSelect-{{ forloop.index0 }}-{{ product.id }}">{{ option.name | escape }}</label>
                                        <select class="qv-select select--small full" id="QuickViewSelect-{{ forloop.index0 }}-{{ product.id }}" data-index="option{{ forloop.index }}">
                                          {% for value in option.values %}
                                          <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value | escape }}</option>
                                          {% endfor %}
                                        </select>
                                      </div>
                                      {% endfor %}
                                    </div>
                                    {% endunless %}

                                    <select name="id" class="qv-master-select" style="display:none;">
                                      {% for variant in product.variants %}
                                        {% if variant.available %}
                                        <option {% if variant == product.selected_or_first_available_variant %}
                                                selected="selected"
                                                {% endif %}
                                                data-sku="{{ variant.sku }}"
                                                value="{{ variant.id }}"
                                                data-variant="{{ variant.title | replace: \' / \', \'\' }}"
                                                data-price="{{ variant.price | money }}"
                                                {% if variant.compare_at_price > variant.price %}
                                                data-price-compare="{{ variant.compare_at_price | money }}"
                                                {% endif %}
                                                data-image-id="{{ variant.image.id }}">
                                          {{ variant.title }} - {{ variant.price | money_with_currency }}
                                        </option>
                                        {% else %}
                                        <option disabled="disabled"
                                                data-variant="{{ variant.title | replace: \' / \', \'\' }}"
                                                data-price="{{ variant.price | money }}"
                                                {% if variant.compare_at_price > variant.price %}
                                                data-price-compare="{{ variant.compare_at_price | money }}"
                                                {% endif %}
                                                data-image-id="{{ variant.image.id }}">
                                          {{ variant.title }} - {{ "products.product.sold_out" | t }}
                                        </option>
                                        {% endif %}
                                      {% endfor %}
                                    </select>

                                    {% if settings.dbtfy_quick_view_quantity_selector %}
                                    <div class="qv-quantity-wrapper">
                                      <label for="QuickViewQuantity" class="qv-quantity-label">{{ "products.product.quantity" | t }}</label>
                                      <div class="qv-qty-container">
                                        <button class="btn btn-square-small qv-qty-adjust qv-qty-minus icon-fallback-text" type="button" aria-label="{{ \'cart.general.reduce_quantity\' | t }}">
                                          <span class="fas fa-minus" aria-hidden="true"></span>
                                          <span class="fallback-text" aria-hidden="true">&minus;</span>
                                        </button>
                                        <input type="number" class="qv-qty-input" name="quantity" id="QuickViewQuantity" value="1" min="1" hidden="hidden">
                                        <button class="btn btn-square-small qv-qty-adjust qv-qty-plus icon-fallback-text" type="button" aria-label="{{ \'cart.general.increase_quantity\' | t }}">
                                          <span class="fas fa-plus" aria-hidden="true"></span>
                                          <span class="fallback-text" aria-hidden="true">+</span>
                                        </button>
                                      </div>
                                    </div>
                                    {% endif %}

                                    <button type="submit" name="add"
                                            class="btn--add-to-cart qv-addtocart-button btn btn--buy btn--full add-to-cart"
                                            {% unless current_variant.available %} disabled="disabled"{% endunless %}>
                                      <span class="btn__text">
                                        <span class="fas fa-shopping-{{ settings.cart_icon }}"></span>
                                        <span class="btn__add-to-cart-text">
                                          {% if current_variant.available %}
                                          {{ "products.product.add_to_cart" | t }}
                                          {% else %}
                                          {{ "products.product.sold_out" | t }}
                                          {% endif %}
                                        </span>
                                      </span>
                                    </button>
                                  {% endform %}
                                </div>
                              </div>
                            </div><!-- modal body -->
                          </div><!-- modal content -->
                        </div><!-- modal dialog -->
                      </div><!-- modal -->
                      <div class="qv-overlay"></div>
                    </div><!-- modal wrapper -->

                  </div>
                {%- endif -%}

                {%- endif -%}';

                $snippet = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $snippet);
               $create_trustbadge_snippet = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/dbtfy-quick-view.liquid', 'value' => $snippet] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add quickView throws client exception');
            }
            catch(\Exception $e){
                logger('add quickView throws exception');
            }

            // add scss
            try{
                $styles = (string) '/* start-dbtfy-quick-view */{% if settings.dbtfy_quick_view %}.dbtfy-quick_view{.qv-icon{opacity:0;@include screen($small){opacity:1;}}.qv-modal{padding: 0 $gutter-sm;position: fixed;top: 0;left: 0;z-index: $zindexDrawer + ($zindexIncrement*2);width: 100%;height: 100%;overflow: hidden;outline: 0;display: none;&.qv-modal-open{display: block;overflow-x: hidden;overflow-y: auto;& + .qv-overlay{pointer-events: auto;opacity: $colorDrawerOverlayOpacity}}}.qv-modal-dialog{margin: $gutter auto;max-width: 800px;@include display-flexbox;@include align-items(center);min-height:calc(100% - #{$gutter*2});pointer-events: none;}.qv-modal-content{pointer-events: auto;background-color: $colorDrawer;border-radius: $borderRadius;overflow: hidden;color: $colorDrawerText;border-color: adaptive-color($colorDrawerDefault, $percentageColorBorder);position: relative;width: 100%;}.qv-header{border-bottom: $borders;border-color: adaptive-color($colorDrawerDefault, $percentageColorBorder);padding: $gutter-sm;@include display-flexbox;@include align-items(center);}.qv-title{color: $colorDrawerText;margin-bottom: 0;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;text-align: left;}.qv-close-button{margin-left: auto;@include button($colorDrawerDefault,$colorDrawerText);}.qv-modal-body{padding-bottom: $gutter;padding-top: $gutter}.qv-overlay{background-color: $colorOverlay;position: fixed;left: 0;right: 0;top: 0;bottom: 0;width: 100%;height: 100%;opacity: 0;pointer-events: none;z-index: $zindexDrawer + $zindexIncrement;@include transition($transitionDrawers);}.qv-details{.qv-price-wrapper{font-size: $baseFontSize-lg;border-color: adaptive-color($colorDrawerDefault, $percentageColorBorder);@include screen($small){margin-top: $spacer;background-color:$colorDrawerDefault;}}.qv-price-compare{margin-right: $spacer-sm;}.qv-quantity-wrapper{margin-bottom: $spacer; }.qv-select{@include button($colorDrawerDefault,$colorDrawerText);@include placeholder($colorDrawerText);}.review-badge > *{margin-bottom: $spacer;}.qv-qty-container{position: relative;width:100%;}.qv-qty-input{text-align: center;width:100%;@include inputSmall;-moz-appearance:textfield;&::-webkit-outer-spin-button,&::-webkit-inner-spin-button{display: none;-webkit-appearance: none;margin: 0;}}.qv-qty-adjust{position: absolute;top:0;z-index: 1;overflow: hidden;@include prefix("user-select", "none");@include backface(hidden);}.qv-qty-minus{left:0;}.qv-qty-plus{right:0;}.qv-addtocart-button{margin-bottom:0;@include button($colorDrawerBuy,$colorDrawerButtonText);}}}.grid-product__wrapper:hover{.qv-icon{opacity:1;}}{% endif %}/* end-dbtfy-quick-view */';

                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-quick-view' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);
                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on quick_view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on quick_view addon throws exception');
            }

            // add include
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-quick-view' ) ) === false ) {
                    if( ( $pos = strrpos( $product_template , '</body>' ) ) !== false ) {
                        $new_prod_template = str_replace('</body>', '{% include "dbtfy-quick-view", type: "container" %} </body>', $product_template);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update quick_view on quick_view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update quick_view on quick_view addon throws exception');
            }

            // add include
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-grid-item.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-quick-view' ) ) === false ) {
                    if( ( $pos = strpos( $product_template , '</a>' ) ) !== false ) {
                        // search for first instance of </a>
                        $new_prod_template = preg_replace('/<\/a>/', '</a>{% include "dbtfy-quick-view" %}', $product_template, 1);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'snippets/product-grid-item.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update quick_view on quick_view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update quick_view on quick_view addon throws exception');
            }

            // add js addon
            try{
              $script= (string)'/* start-dbtfy-quick-view */function themeQuickView() { {% if settings.dbtfy_quick_view %} var qvTextAvailable = "{{ \'products.product.add_to_cart\' | t }}"; var qvTextUnavailable = "{{ \'products.product.unavailable\' | t }}"; var qvTextSoldout = "{{ \'products.product.sold_out\' | t }}"; var _0xd056=["\x23\x51\x75\x69\x63\x6B\x56\x69\x65\x77\x43\x6F\x6E\x74\x61\x69\x6E\x65\x72","\x2E\x71\x76\x2D\x77\x72\x61\x70\x70\x65\x72","\x2E\x71\x76\x2D\x69\x63\x6F\x6E","\x63\x61\x72\x74\x54\x79\x70\x65","\x73\x65\x74\x74\x69\x6E\x67\x73","\x61\x70\x70\x65\x6E\x64\x54\x6F","\x65\x61\x63\x68","\x63\x6C\x69\x63\x6B","\x70\x72\x65\x76\x65\x6E\x74\x44\x65\x66\x61\x75\x6C\x74","\x64\x61\x74\x61\x2D\x73\x65\x63\x74\x69\x6F\x6E\x2D\x69\x64","\x61\x74\x74\x72","\x64\x61\x74\x61\x2D\x70\x72\x6F\x64\x75\x63\x74\x2D\x69\x64","\x23\x51\x75\x69\x63\x6B\x56\x69\x65\x77\x2D","\x2D","\x2E\x71\x76\x2D\x6D\x6F\x64\x61\x6C\x2D\x63\x6F\x6E\x74\x65\x6E\x74","\x66\x69\x6E\x64","\x2E\x71\x76\x2D\x73\x6C\x69\x63\x6B","\x2E\x70\x72\x6F\x64\x75\x63\x74\x2D\x73\x69\x6E\x67\x6C\x65\x5F\x5F\x74\x68\x75\x6D\x62\x6E\x61\x69\x6C\x73","\x2E\x71\x76\x2D\x6D\x61\x73\x74\x65\x72\x2D\x73\x65\x6C\x65\x63\x74","\x2E\x71\x76\x2D\x73\x65\x6C\x65\x63\x74","\x2E\x71\x76\x2D\x61\x64\x64\x74\x6F\x63\x61\x72\x74\x2D\x62\x75\x74\x74\x6F\x6E","\x2E\x62\x74\x6E\x5F\x5F\x61\x64\x64\x2D\x74\x6F\x2D\x63\x61\x72\x74\x2D\x74\x65\x78\x74","\x2E\x71\x76\x2D\x63\x6C\x6F\x73\x65\x2D\x62\x75\x74\x74\x6F\x6E","\x2E\x71\x76\x2D\x71\x74\x79\x2D\x61\x64\x6A\x75\x73\x74","\x2E\x71\x76\x2D\x70\x72\x69\x63\x65","\x2E\x71\x76\x2D\x70\x72\x69\x63\x65\x2D\x63\x6F\x6D\x70\x61\x72\x65","\x71\x76\x2D\x6D\x6F\x64\x61\x6C\x2D\x6F\x70\x65\x6E","\x72\x65\x6D\x6F\x76\x65\x43\x6C\x61\x73\x73","\x6A\x73\x2D\x64\x72\x61\x77\x65\x72\x2D\x6F\x70\x65\x6E","\x68\x61\x73\x43\x6C\x61\x73\x73","\x23\x43\x61\x72\x74\x44\x72\x61\x77\x65\x72","\x62\x74\x6E\x2D\x2D\x6C\x6F\x61\x64\x69\x6E\x67","\x6D\x69\x6E\x2D\x77\x69\x64\x74\x68","","\x63\x73\x73","\x61\x64\x64\x43\x6C\x61\x73\x73","\x73\x6C\x69\x63\x6B\x2D\x69\x6E\x69\x74\x69\x61\x6C\x69\x7A\x65\x64","\x73\x65\x74\x50\x6F\x73\x69\x74\x69\x6F\x6E","\x73\x6C\x69\x63\x6B","\x72\x65\x73\x69\x7A\x65","\x6F\x6E","\x74\x61\x72\x67\x65\x74","\x69\x73","\x6C\x65\x6E\x67\x74\x68","\x68\x61\x73","\x6D\x6F\x75\x73\x65\x64\x6F\x77\x6E","\x6B\x65\x79\x43\x6F\x64\x65","\x6B\x65\x79\x75\x70","\x6F\x75\x74\x65\x72\x57\x69\x64\x74\x68","\x64\x72\x61\x77\x65\x72","\x69\x6E\x70\x75\x74","\x70\x61\x72\x65\x6E\x74","\x76\x61\x6C","\x71\x76\x2D\x71\x74\x79\x2D\x70\x6C\x75\x73","\x63\x68\x61\x6E\x67\x65","\x70\x75\x73\x68","\x6F\x70\x74\x69\x6F\x6E\x5B\x64\x61\x74\x61\x2D\x76\x61\x72\x69\x61\x6E\x74\x3D\x22","\x6A\x6F\x69\x6E","\x22\x5D","\x69\x6D\x61\x67\x65\x2D\x69\x64","\x64\x61\x74\x61","\x64\x61\x74\x61\x2D\x70\x72\x69\x63\x65","\x64\x61\x74\x61\x2D\x70\x72\x69\x63\x65\x2D\x63\x6F\x6D\x70\x61\x72\x65","\x68\x74\x6D\x6C","\x73\x68\x6F\x77","\x6F\x6E\x2D\x73\x61\x6C\x65","\x68\x69\x64\x65","\x73\x65\x6C\x65\x63\x74\x65\x64","\x70\x72\x6F\x70","\x64\x69\x73\x61\x62\x6C\x65\x64","\x74\x65\x78\x74","\x72\x65\x6D\x6F\x76\x65\x41\x74\x74\x72","\x64\x61\x74\x61\x2D\x73\x6C\x69\x63\x6B\x2D\x69\x6E\x64\x65\x78","\x2E\x71\x76\x2D\x69\x6D\x61\x67\x65\x2D","\x73\x6C\x69\x63\x6B\x47\x6F\x54\x6F","\x23\x70\x72\x6F\x64\x75\x63\x74\x52\x65\x63\x6F\x6D\x6D\x65\x6E\x64\x61\x74\x69\x6F\x6E\x73\x53\x65\x63\x74\x69\x6F\x6E","\x2E\x70\x72\x6F\x64\x75\x63\x74\x2D\x72\x65\x63\x6F\x6D\x6D\x65\x6E\x64\x61\x74\x69\x6F\x6E\x73"];function QuickView(){var _0x11b0x2=$(_0xd056[0]),_0x11b0x3=$(_0xd056[1]),_0x11b0x4=$(_0xd056[2]),_0x11b0x5=theme[_0xd056[4]][_0xd056[3]];$[_0xd056[6]](_0x11b0x3,function(){$(this)[_0xd056[5]](_0x11b0x2)}),_0x11b0x4[_0xd056[40]](_0xd056[7],function(_0x11b0x2){_0x11b0x2[_0xd056[8]]();var _0x11b0x3=$(this)[_0xd056[10]](_0xd056[9]),_0x11b0x4=$(this)[_0xd056[10]](_0xd056[11]),_0x11b0x6=$(_0xd056[12]+ _0x11b0x3+ _0xd056[13]+ _0x11b0x4),_0x11b0x7=_0x11b0x6[_0xd056[15]](_0xd056[14]),_0x11b0x8=_0x11b0x6[_0xd056[15]](_0xd056[16]),_0x11b0x9=_0x11b0x6[_0xd056[15]](_0xd056[17]),_0x11b0xa=_0x11b0x6[_0xd056[15]](_0xd056[18]),_0x11b0xb=_0x11b0x6[_0xd056[15]](_0xd056[19]),_0x11b0xc=_0x11b0x6[_0xd056[15]](_0xd056[20]),_0x11b0xd=_0x11b0xc[_0xd056[15]](_0xd056[21]),_0x11b0xe=_0x11b0x6[_0xd056[15]](_0xd056[22]),_0x11b0xf=_0x11b0x6[_0xd056[15]](_0xd056[23]),_0x11b0x10=_0x11b0x6[_0xd056[15]](_0xd056[24]),_0x11b0x11=_0x11b0x6[_0xd056[15]](_0xd056[25]);function _0x11b0x12(){_0x11b0x6[_0xd056[27]](_0xd056[26])}function _0x11b0x13(){$(_0xd056[30])[_0xd056[29]](_0xd056[28])?(_0x11b0xc[_0xd056[27]](_0xd056[31]),_0x11b0xc[_0xd056[34]](_0xd056[32],_0xd056[33]),_0x11b0x12()):setTimeout(_0x11b0x13,100)}_0x11b0x6[_0xd056[35]](_0xd056[26]),_0x11b0x8[_0xd056[29]](_0xd056[36])?($(_0x11b0x8)[_0xd056[38]](_0xd056[37]),$(_0x11b0x9)[_0xd056[38]](_0xd056[37])):($(_0x11b0x8)[_0xd056[38]]({arrows:!1,dots:!1,adaptiveHeight:!0,asNavFor:_0x11b0x9}),$(_0x11b0x9)[_0xd056[38]]({slidesToShow:5,slidesToScroll:1,dots:!1,arrows:!1,focusOnSelect:!0,asNavFor:_0x11b0x8}),$(window)[_0xd056[40]](_0xd056[39],function(){$(_0x11b0x8)[_0xd056[38]](_0xd056[37]),$(_0x11b0x9)[_0xd056[38]](_0xd056[37])})),_0x11b0xe[_0xd056[40]](_0xd056[7],function(){_0x11b0x12()}),$(document)[_0xd056[45]](function(_0x11b0x2){_0x11b0x7[_0xd056[42]](_0x11b0x2[_0xd056[41]])|| 0!== _0x11b0x7[_0xd056[44]](_0x11b0x2[_0xd056[41]])[_0xd056[43]]|| _0x11b0x12()}),$(document)[_0xd056[47]](function(_0x11b0x2){27=== _0x11b0x2[_0xd056[46]]&& _0x11b0x12()}),_0x11b0xc[_0xd056[40]](_0xd056[7],function(){var _0x11b0x2=$(this)[_0xd056[48]]();$(this)[_0xd056[34]](_0xd056[32],_0x11b0x2),$(this)[_0xd056[35]](_0xd056[31]),_0xd056[49]== _0x11b0x5?_0x11b0x13():setTimeout(function(){_0x11b0x12()},500)}),_0x11b0xf[_0xd056[40]](_0xd056[7],function(){var _0x11b0x2=$(this),_0x11b0x3=_0x11b0x2[_0xd056[51]]()[_0xd056[15]](_0xd056[50]),_0x11b0x4=_0x11b0x3[_0xd056[52]]();_0x11b0x4= _0x11b0x2[_0xd056[29]](_0xd056[53])?parseFloat(_0x11b0x4)+ 1:1< _0x11b0x4?parseFloat(_0x11b0x4)- 1:1,_0x11b0x3[_0xd056[52]](_0x11b0x4)}),_0x11b0xb[_0xd056[40]](_0xd056[54],function(){var _0x11b0x2=[];$[_0xd056[6]](_0x11b0xb,function(){_0x11b0x2[_0xd056[55]]($(this)[_0xd056[52]]())});var _0x11b0x3=_0x11b0xa[_0xd056[15]](_0xd056[56]+ _0x11b0x2[_0xd056[57]](_0xd056[33])+ _0xd056[58]),_0x11b0x4=_0x11b0x3[_0xd056[60]](_0xd056[59]),_0x11b0x7=_0x11b0x3[_0xd056[10]](_0xd056[61]),_0x11b0x8=_0x11b0x3[_0xd056[10]](_0xd056[62]);if(_0x11b0x10[_0xd056[63]](_0x11b0x7),void(0)!== _0x11b0x8?(_0x11b0x11[_0xd056[64]](),_0x11b0x10[_0xd056[35]](_0xd056[65]),_0x11b0x11[_0xd056[63]](_0x11b0x8)):(_0x11b0x11[_0xd056[66]](),_0x11b0x10[_0xd056[27]](_0xd056[65])),_0x11b0x3[_0xd056[43]]){if(_0x11b0x3[_0xd056[68]](_0xd056[67],!0),_0x11b0x3[_0xd056[10]](_0xd056[69])?(_0x11b0xd[_0xd056[70]](qvTextSoldout),_0x11b0xc[_0xd056[35]](_0xd056[69])[_0xd056[10]](_0xd056[69],_0xd056[69])):(_0x11b0xd[_0xd056[70]](qvTextAvailable),_0x11b0xc[_0xd056[27]](_0xd056[69])[_0xd056[71]](_0xd056[69])),_0xd056[33]!= _0x11b0x4){var _0x11b0x9=_0x11b0x6[_0xd056[15]](_0xd056[73]+ _0x11b0x4)[_0xd056[10]](_0xd056[72]);void(0)!== _0x11b0x9&& _0x11b0x6[_0xd056[15]](_0xd056[16])[_0xd056[38]](_0xd056[74],parseInt(_0x11b0x9))}}else {_0x11b0xd[_0xd056[70]](qvTextUnavailable),_0x11b0xc[_0xd056[35]](_0xd056[69])[_0xd056[10]](_0xd056[69],_0xd056[69])}})})}function checkProductRecommendation(_0x11b0x3){if($(_0xd056[75])[0]){var _0x11b0x4=1;!function _0x11b0x2(){$(_0xd056[76])[0]?_0x11b0x3():setTimeout(function(){10== _0x11b0x4?_0x11b0x3():(_0x11b0x4++,_0x11b0x2())},100)}()}else {_0x11b0x3()}}checkProductRecommendation(QuickView) {% endif %} }; /* end-dbtfy-quick-view */';

                // add js register
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_js_content , "/* start-register-quick-view */" ) ) === false ) {
                    $new_theme_js = str_replace('var sections = new theme.Sections();', 'var sections = new theme.Sections();/* start-register-quick-view */themeQuickView();/* end-register-quick-view */', $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }

                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';
                $replace_code= '/* start-dbtfy-addons */';
                if( ( $pos = strpos( $theme_js_content , '/* start-dbtfy-quick-view */' ) ) === false ) {
                    $new_theme_js = str_replace($replace_code, $replace_code.$script, $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update js on cookie_box addon throws client exception');
            }
            catch(\Exception $e){
                logger('update js on cookie_box addon throws exception');
            }

        }
    }
}

// deactivate
if (! function_exists('deactivate_quick_view_addon')) {
    function deactivate_quick_view_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

            // remove schema
            $schema_get = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'config/settings_schema.json'] ]
            )['body'];

            if(!isset($schema_get['asset']['value']))
            {
                deactivate_quick_view_addon_curl($theme, $shop);
                continue;
            }
            else
            {
                $schema = $schema_get['asset']['value'];
            }

            $json = json_decode($schema, true);
            $json = array_filter($json, function ($obj) {
                if (stripos($obj['name'], 'Quick view') !== false) {
                    return false;
                }
                return true;
            });

            if(!empty($schema) && str_contains($schema,'Quick view')){
                $value = json_encode(array_values($json));
                $updated_schema = $value;

                $update_schema_settings = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                );
            }

            // remove scss
            $theme_style_content = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
            )['body']['asset']['value'];

            $trustbadge_Style = (string) '/* start-dbtfy-quick-view */';
            $end = (string) '/* end-dbtfy-quick-view */';
            $string = ' ' . $theme_style_content;
            $ini = strpos($string, $trustbadge_Style);

            if ($ini == 0) {
              $parsed = '';
            }else{
              $ini += strlen($trustbadge_Style);
              $len = strpos($string, $end, $ini) - $ini;
              $parsed = substr($string, $ini, $len);
            }
            $values = $trustbadge_Style.''.$parsed.''.$end;

            if(!empty($theme_style_content) && str_contains($theme_style_content,'dbtfy-quick_view')){
                $value = str_replace($values, " ", $theme_style_content);
                $new_theme_styles = (string) $value;

                $update_styles = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                );
            }

            // remove snippet
            $delete_trustbadge_snippet = $shop->api()->request(
              'DELETE',
              '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
              ['asset' => ['key' => 'snippets/dbtfy-quick-view.liquid'] ]
            );

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'layout/theme.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(!empty($product_template) && str_contains($product_template,'dbtfy-quick-view')){
                $value  =  explode('{% include "dbtfy-quick-view", type: "container" %}',$product_template,2);
                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }
                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/product-grid-item.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(!empty($product_template) && str_contains($product_template,'dbtfy-quick-view')){
                $value  =  explode('{% include "dbtfy-quick-view" %}',$product_template,2);
                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }
                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-grid-item.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove js addon
            try{
               $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                $trustbadge_js = (string) '/* start-dbtfy-quick-view */';
                $end_js = (string) '/* end-dbtfy-quick-view */';
                $string_js = ' ' . $theme_js_content;
                $ini_js = strpos($string_js, $trustbadge_js);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
                if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-quick-view */')){
                    $value = str_replace($value_js, " ", $theme_js_content);
                    $new_theme_js = (string) $value;
                    if(!empty($new_theme_js) && str_contains($new_theme_js,'/* start-register-quick-view */')){
                        $trustbadge_js1 = (string) '/* start-register-quick-view */';
                        $end_js = (string) '/* end-register-quick-view */';
                        $string_js = ' ' . $new_theme_js;
                        $ini_js = strpos($string_js, $trustbadge_js1);
                        if ($ini_js == 0) {
                            $parsed_js = '';
                        } else{
                            $ini_js += strlen($trustbadge_js1);
                            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                            $parsed_js = substr($string_js, $ini_js, $len_js);
                        }
                        $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                        $value = str_replace($value_js, " ", $new_theme_js);
                        $new_theme_js1 = (string) $value;
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js1] ]
                        );
                    }
                    else{
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add quick_view throws client exception');
            }
            catch(\Exception $e){
                logger('add quick_view throws exception');
            }

        }
    }
}


if (! function_exists('deactivate_quick_view_addon_curl')) {
  function deactivate_quick_view_addon_curl($theme, $shop) {

    // remove schema
    $schema = getThemeFileCurl($shop, $theme, 'config/settings_schema.json');

    $json = json_decode($schema, true);
    $json = array_filter($json, function ($obj) {
        if (stripos($obj['name'], 'Quick view') !== false) {
            return false;
        }
        return true;
    });

    if(!empty($schema) && str_contains($schema,'Quick view')){
        $value = json_encode(array_values($json));
        $updated_schema = $value;

        $update_schema_settings = putThemeFileCurl($shop, $theme, $updated_schema, 'config/settings_schema.json');
    }

    // remove scss
    $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid');

    $trustbadge_Style = (string) '/* start-dbtfy-quick-view */';
    $end = (string) '/* end-dbtfy-quick-view */';
    $string = ' ' . $theme_style_content;
    $ini = strpos($string, $trustbadge_Style);

    if ($ini == 0) {
      $parsed = '';
    }else{
      $ini += strlen($trustbadge_Style);
      $len = strpos($string, $end, $ini) - $ini;
      $parsed = substr($string, $ini, $len);
    }
    $values = $trustbadge_Style.''.$parsed.''.$end;

    if(!empty($theme_style_content) && str_contains($theme_style_content,'dbtfy-quick_view')){
        $value = str_replace($values, " ", $theme_style_content);
        $new_theme_styles = (string) $value;

        $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
    }

    // remove snippet
    $delete_trustbadge_snippet = deleteThemeFilesCurl($shop, $theme, 'snippets/dbtfy-quick-view.liquid');

    // remove include
    $product_template = getThemeFileCurl($shop, $theme, 'layout/theme.liquid');

    if(!empty($product_template) && str_contains($product_template,'dbtfy-quick-view')){
        $value  =  explode('{% include "dbtfy-quick-view", type: "container" %}',$product_template,2);
        if(isset($value[0]) && isset($value[1])){
            $value = $value[0].' '.$value[1];
        }
        else{
            $value = (string) $product_template;
        }
        $new_prod_template = (string) $value;
        $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'layout/theme.liquid');
    }

    // remove include
    $product_template = getThemeFileCurl($shop, $theme, 'snippets/product-grid-item.liquid');

    if(!empty($product_template) && str_contains($product_template,'dbtfy-quick-view')){
        $value  =  explode('{% include "dbtfy-quick-view" %}',$product_template,2);
        if(isset($value[0]) && isset($value[1])){
            $value = $value[0].' '.$value[1];
        }
        else{
            $value = (string) $product_template;
        }
        $new_prod_template = (string) $value;
        $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'snippets/product-grid-item.liquid');
    }

    // remove js addon
    try{
       $theme_js_content = getThemeFileCurl($shop, $theme, 'assets/dbtfy-addons.js.liquid');
        if ($theme_js_content == null)
        {
            $theme_js_content = '';
        }
        $trustbadge_js = (string) '/* start-dbtfy-quick-view */';
        $end_js = (string) '/* end-dbtfy-quick-view */';
        $string_js = ' ' . $theme_js_content;
        $ini_js = strpos($string_js, $trustbadge_js);
        if ($ini_js == 0) {
            $parsed_js = '';
        } else{
            $ini_js += strlen($trustbadge_js);
            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
            $parsed_js = substr($string_js, $ini_js, $len_js);
        }
        $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
        if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-quick-view */')){
            $value = str_replace($value_js, " ", $theme_js_content);
            $new_theme_js = (string) $value;
            if(!empty($new_theme_js) && str_contains($new_theme_js,'/* start-register-quick-view */')){
                $trustbadge_js1 = (string) '/* start-register-quick-view */';
                $end_js = (string) '/* end-register-quick-view */';
                $string_js = ' ' . $new_theme_js;
                $ini_js = strpos($string_js, $trustbadge_js1);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js1);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                $value = str_replace($value_js, " ", $new_theme_js);
                $new_theme_js1 = (string) $value;
                $update_js = putThemeFileCurl($shop, $theme, $new_theme_js1, 'assets/dbtfy-addons.js.liquid');
            }
            else{
                $update_js = putThemeFileCurl($shop, $theme, $new_theme_js, 'assets/dbtfy-addons.js.liquid');
            }
        }
    }
    catch(\GuzzleHttp\Exception\ClientException $e){
        logger('add quick_view throws client exception');
    }
    catch(\Exception $e){
        logger('add quick_view throws exception');
    }
  }
}

?>
