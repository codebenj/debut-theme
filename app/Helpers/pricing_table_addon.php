<?php
use Illuminate\Support\Arr;

//activate
if (! function_exists('activate_pricing_table_addon')) {
    function activate_pricing_table_addon($StoreThemes, $shop) {
      	foreach ($StoreThemes as $theme) {

            // add section
            try{
                $section = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
{%- if section.settings.dbtfy_pricing_table and section.blocks.size > 0 -%}
<div id="PricingTable"
     class="{{ section.settings.section_style }}"
     data-section-id="{{ section.id }}"
     data-section-type="pricing-table">
  <div class="box">
    <div class="wrapper">

      {%- if section.settings.title != blank or section.settings.subtitle != blank -%}
      <div class="section-header">
        {%- if section.settings.title != blank %}
        <h2 class="section-header__title">{{ section.settings.title | escape }}</h2>
        {%- endif -%}
        {%- if section.settings.subtitle != blank %}
        <p class="section-header__subtitle">{{ section.settings.subtitle | escape }}</p>
        {%- endif -%}
      </div>
      {%- endif -%}

      <div class="pt-pricing-plans pt-button-position-{{ section.settings.dbtfy_button_position }}">
        {% for block in section.blocks %}
        <div class="pt-pricing-plan {% if block.type == "popular_plan" %}pt-popular-plan{% else %}pt-basic-plan{% endif %} {% if block.settings.dbtfy_full_background %}pt-full-background{% endif %}">

          <div class="pt-plan-header">
            {% if block.type == "popular_plan" %}
            <div class="pt-popular-plan-badge">{{ block.settings.dbtfy_plan_badge }}</div>
            {% endif %}

            {% if block.settings.dbtfy_plan_image != blank %}
            <div class="image-wrapper" style="padding-top:{{ 1 | divided_by: block.settings.dbtfy_plan_image.aspect_ratio | times: 100}}%;">
              {% assign img_url = block.settings.dbtfy_plan_image | img_url: "1x1" | replace: "_1x1.", "_{width}x." %}
              <img class="image lazyload pt-plan-image"
                   src="{{ block.settings.dbtfy_plan_image | img_url: "small" }}"
                   data-src="{{ img_url }}"
                   data-widths="[180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 2048]"
                   data-aspectratio="{{ block.settings.dbtfy_plan_image.aspect_ratio }}"
                   data-sizes="auto"
                   alt="{{ block.settings.dbtfy_plan_image.alt | escape }}">
            </div>
            {% elsif block.settings.dbtfy_plan_icon != blank %}
            <div class="pt-plan-icon">
              <i class="fas fa-{{ block.settings.dbtfy_plan_icon }} fa-5x"></i>
            </div>
            {% endif %}
          </div>

          <div class="pt-plan-body">
            {% if block.settings.dbtfy_plan_title != blank %}
            <h3 class="pt-plan-title">{{ block.settings.dbtfy_plan_title }}</h3>
            {% endif %}

            {% if block.settings.dbtfy_plan_description != blank %}
            <p class="pt-plan-description">{{ block.settings.dbtfy_plan_description }}</p>
            {% endif %}

            {% if block.settings.dbtfy_plan_price != blank %}
            <h3 class="pt-plan-price">{{ block.settings.dbtfy_plan_price }}</h3>
            {% endif %}

            {% if block.settings.dbtfy_plan_price_text != blank %}
            <p class="pt-sub-text">{{ block.settings.dbtfy_plan_price_text }}</p>
            {% endif %}

            {% if section.settings.dbtfy_button_position == "middle" %}
            <div class="pt-button-middle">
              {% if block.settings.dbtfy_plan_button_label != blank %}
              <a href="{{ block.settings.dbtfy_plan_button_link }}"
                 class="btn {% if block.settings.dbtfy_plan_button_description == blank %}pt-btn-no-subtext{% endif %} {{ block.settings.dbtfy_plan_button_style }} pt-plan-button {% if block.settings.dbtfy_pricing_button_animation %}animated pulse infinite{% endif %}">
                {{ block.settings.dbtfy_plan_button_label }}
              </a>
              {% endif %}
              {% if block.settings.dbtfy_plan_button_description != blank %}
              <p class="pt-sub-text">{{ block.settings.dbtfy_plan_button_description }}</p>
              {% endif %}
            </div>
            {% endif %}

            {% if block.settings.dbtfy_plan_details != blank %}
            {% assign plan_details = block.settings.dbtfy_plan_details | remove: "<p>" | remove: "</p>" | strip | split: ","  %}
            <div class="pt-plan-details">
              {% for detail in plan_details %}
              {% if detail != blank %}
              <p class="pt-plan-detail">
                {% if block.settings.dbtfy_plan_details_icon != blank %}
                <span class="fas fa-{{ block.settings.dbtfy_plan_details_icon }} pt-icon-detail"></span>
                {% endif %}
                {{ detail }}
              </p>
              {% endif %}
              {% endfor %}
            </div>
            {% endif %}

            {% if section.settings.dbtfy_button_position == "bottom" %}
            <div class="pt-button-bottom">
              {% if block.settings.dbtfy_plan_button_label != blank %}
              <a href="{{ block.settings.dbtfy_plan_button_link }}"
                 class="btn {% if block.settings.dbtfy_plan_button_description == blank %}pt-btn-no-subtext{% endif %} {{ block.settings.dbtfy_plan_button_style }} pt-plan-button {% if block.settings.dbtfy_pricing_button_animation %}animated pulse infinite{% endif %}">
                {{ block.settings.dbtfy_plan_button_label }}
              </a>
              {% endif %}
              {% if block.settings.dbtfy_plan_button_description != blank %}
              <p class="pt-sub-text">{{ block.settings.dbtfy_plan_button_description }}</p>
              {% endif %}
            </div>
            {% endif %}

          </div>

        </div>
        {% endfor %}
      </div>

    </div>
  </div>
</div>
{%- endif -%}
';
$section_schema = '{% schema %}
  {
    "name": "Pricing table",
    "class": "dbtfy dbtfy-pricing_table",
    "settings": [
  		{
        "type": "header",
        "content": "Activation"
    	},
    	{
        "type": "checkbox",
        "id": "dbtfy_pricing_table",
        "label": "Activate",
        "default": false
    	},
      {
      	"type": "header",
      	"content": "Settings"
    	},
  		{
      	"type": "text",
      	"id": "title",
      	"label": "Heading",
      	"default": "Pricing table"
    	},
    	{
      	"type": "text",
      	"id": "subtitle",
      	"label": "Subheading"
    	},
      {
        "type": "select",
        "id": "section_style",
        "label": "Section style",
        "default": "",
        "options": [
            {
              "value": "",
              "label": "Default"
            },
            {
              "value": "bg-section",
              "label": "Add background color"
            },
            {
              "value": "border-section",
              "label": "Add border top"
            }
        ]
      },
  		{
        "type": "select",
        "id": "dbtfy_button_position",
        "label": "Button position",
        "default": "middle",
        "options": [
            {
  	          "value": "middle",
            	"label": "Middle"
            },
            {
              "value": "bottom",
              "label": "Bottom"
            }
        ]
	    }
   ],
  "blocks" : [
  	{
    	"type": "plan",
    	"name": "Basic plan",
      "limit": 3,
    	"settings": [
        {
        	"type": "image_picker",
        	"id": "dbtfy_plan_image",
        	"label": "Image"
        },
				{
        	"type": "text",
        	"id": "dbtfy_plan_icon",
        	"label": "Plan icon",
        	"default": "tags",
        	"info": "Enter the name of any free solid icons on [FontAwesome](https:\/\/fontawesome.com\/icons?d=gallery&s=solid&m=free)"
        },
				{
          "type": "text",
          "id": "dbtfy_plan_title",
          "label": "Title",
					"default": "Title"
        },
        {
          "type": "text",
          "id": "dbtfy_plan_description",
          "label": "Description"
        },
				{
          "type": "text",
          "id": "dbtfy_plan_price",
          "label": "Price",
					"default": "$19.99"
        },
        {
          "type": "text",
          "id": "dbtfy_plan_price_text",
          "label": "Price text"
        },
				{
          "type": "text",
          "id": "dbtfy_plan_button_label",
          "label": "Button label",
					"default": "Get started"
        },
        {
          "type": "url",
          "id": "dbtfy_plan_button_link",
          "label": "Button link"
        },
        {
          "type": "select",
          "id": "dbtfy_plan_button_style",
          "label": "Button style",
          "default": "btn-outline-buy",
          "options": [
              {
                "value": "",
                "label": "Default"
              },
              {
                "value": "btn--buy",
                "label": "Full"
              },
              {
                "value": "btn-outline-buy",
                "label": "Outline"
              }
          ]
        },
				{
          "type": "text",
          "id": "dbtfy_plan_button_description",
          "label": "Button description"
        },
				{
          "type": "richtext",
          "id": "dbtfy_plan_details",
          "label": "Details",
					"info": "Comma-separated",
					"default": "<p>point 1, point 2, point 3</p>"
        },
        {
        	"type": "text",
        	"id": "dbtfy_plan_details_icon",
        	"label": "Detail icon",
        	"default": "check-circle",
        	"info": "Enter the name of any free solid icons on [FontAwesome](https:\/\/fontawesome.com\/icons?d=gallery&s=solid&m=free)"
        }
			]
		},
		{
    	"type": "popular_plan",
    	"name": "Featured plan",
			"limit": 1,
    	"settings": [
    		{
          "type": "checkbox",
          "id": "dbtfy_full_background",
          "label": "Enable full background",
          "default": false
        },
        {
        	"type": "image_picker",
        	"id": "dbtfy_plan_image",
        	"label": "Image"
        },
				{
        	"type": "text",
        	"id": "dbtfy_plan_icon",
        	"label": "Plan icon",
        	"default": "tags",
        	"info": "Enter the name of any free solid icons on [FontAwesome](https:\/\/fontawesome.com\/icons?d=gallery&s=solid&m=free)"
        },
				{
					"type": "text",
          "id": "dbtfy_plan_badge",
          "label": "Badge",
					"default": "Most popular"
				},
				{
          "type": "text",
          "id": "dbtfy_plan_title",
          "label": "Title",
          "default": "Title"
        },
        {
          "type": "text",
          "id": "dbtfy_plan_description",
          "label": "Description"
        },
				{
          "type": "text",
          "id": "dbtfy_plan_price",
          "label": "Price",
					"default": "$19.99"
        },
        {
          "type": "text",
          "id": "dbtfy_plan_price_text",
          "label": "Price text"
        },
        {
          "type": "checkbox",
          "id": "dbtfy_pricing_button_animation",
          "label": "Enable button animation",
          "default": true
        },
				{
          "type": "text",
          "id": "dbtfy_plan_button_label",
          "label": "Button label",
					"default": "Get started now"
        },
        {
          "type": "url",
          "id": "dbtfy_plan_button_link",
          "label": "Button link"
        },
        {
          "type": "select",
          "id": "dbtfy_plan_button_style",
          "label": "Button style",
          "default": "btn--buy",
          "options": [
              {
                "value": "",
                "label": "Default"
              },
              {
                "value": "btn--buy",
                "label": "Full"
              },
              {
                "value": "btn-outline-buy",
                "label": "Outline"
              }
          ]
        },
				{
          "type": "text",
          "id": "dbtfy_plan_button_description",
          "label": "Button description"
        },
				{
          "type": "richtext",
          "id": "dbtfy_plan_details",
          "label": "Details",
					"info": "Comma-separated",
          "default": "<p>point 1, point 2, point 3</p>"
        },
        {
        	"type": "text",
        	"id": "dbtfy_plan_details_icon",
        	"label": "Detail icon",
        	"default": "check-circle",
        	"info": "Enter the name of any free solid icons on [FontAwesome](https:\/\/fontawesome.com\/icons?d=gallery&s=solid&m=free)"
        }
			]
		}
	],
  "presets": [
      {
        "name": "Pricing table",
        "category": "Add-ons",
        "blocks": [
          {
            "type": "plan"
          },
          {
            "type": "popular_plan"
          },
          {
            "type": "plan"
          }
        ]
      }
    ]
  }
{% endschema %}';

                $section = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $section);

                $section .= $section_schema;

                $create_pricing_table_section = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'sections/dbtfy-pricing-table.liquid', 'value' => $section] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add pricing table throws client exception');
            }
            catch(\Exception $e){
                logger('add pricing table throws exception');
            }

            // add scss
            try{
                $styles = (string) '/* start-dbtfy-pricing-table */.dbtfy-pricing_table{.section-header{@include screenUp($small){padding-bottom:$spacer}}.pt-pricing-plans{@include display-flexbox;@include screen($small){margin-bottom:-$gutter-sm;@include flex-wrap(wrap)}&.pt-button-position-bottom{.pt-plan-details{padding-bottom:$spacer}.pt-button-bottom{.pt-sub-text{margin-bottom:0}}}}.pt-pricing-plan{position:relative;z-index:1;text-align:center;margin-bottom:$gutter-sm;@include flex(1);@include screenUp($small){&:first-child{border-top-left-radius:$borderRadius;border-bottom-left-radius:$borderRadius}&:last-child{border-top-right-radius:$borderRadius;border-bottom-right-radius:$borderRadius}}@include screen($small){@include flex(100%);border-radius:$borderRadius}}.pt-basic-plan{background-color:$colorDefault}.bg-section{.pt-basic-plan{background-color:$colorBody}}.pt-popular-plan{z-index:2;@include shadow($shadow);position:relative;overflow:hidden;background-color:$colorBody;border-radius:$borderRadius;border-color:$colorSecondary;@include screenUp($small){@include transform(scale(1.08))}&.pt-full-background{color:$colorBody;background-color:$colorSecondary;.pt-popular-plan-badge{background-color:$colorBody;color:$colorSecondary}.pt-plan-title,.pt-plan-price,.pt-icon-detail{color:$colorBody}}}.pt-plan-image{border-radius:$borderRadius $borderRadius 0 0}.pt-plan-icon{padding:$gutter $gutter 0}.pt-popular-plan-badge{z-index:($zindexBase+1);width:180px;padding:10px 20px;font-size:$baseFontSize-sm;line-height:$baseFontSize-sm;text-align:center;font-weight:700;color:$colorBody;background:$colorSecondary;position:absolute;right:-45px;top:25px;text-transform:uppercase;@include transform(rotate(40deg))}.pt-btn-no-subtext{margin-bottom:$spacer}.pt-sub-text{margin-top:$spacer-xs;font-size:$baseFontSize-sm}.pt-plan-detail{margin-bottom:$spacer-sm;&:last-child{margin-bottom:0}}.pt-icon-detail{color:$colorSecondary;font-weight:700}.pt-plan-body{padding:$gutter}}/* end-dbtfy-pricing-table */';

                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-pricing-table' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);
                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on pricing table addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on pricing table addon throws exception');
            }

            // add to product.liquid
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'templates/product.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-pricing-table' ) ) === false ) {
                    if( ( $pos = strrpos( $product_template , '{% section "dbtfy-upsell-bundles" %}' ) ) !== false ) {
                      $new_prod_template = str_replace('{% section "dbtfy-upsell-bundles" %}', '{% section "dbtfy-upsell-bundles" %}{% section "dbtfy-pricing-table" %}', $product_template);
                      $update_prod_template = $shop->api()->request(
                          'PUT',
                          '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                          ['asset' => ['key' => 'templates/product.liquid', 'value' => $new_prod_template] ]
                      );
                    }
                    elseif( ( $pos = strrpos( $product_template , "{% section 'product-template' %}" ) ) !== false ) {
                      $new_prod_template = str_replace("{% section 'product-template' %}", '{% section \'product-template\' %}{% section "dbtfy-pricing-table" %}', $product_template);
                      $update_prod_template = $shop->api()->request(
                          'PUT',
                          '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                          ['asset' => ['key' => 'templates/product.liquid', 'value' => $new_prod_template] ]
                      );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update product liquid on pricing table addon throws client exception');
            }
            catch(\Exception $e){
                logger('update product liquid on pricing table addon throws exception');
            }

        }
    }
}

// deactivate
if (! function_exists('deactivate_pricing_table_addon')) {
    function deactivate_pricing_table_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

          // remove scss
          $theme_style_content = $shop->api()->request(
              'GET',
              '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
              ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
          )['body'];


          if(!isset($theme_style_content['asset']['value']))
          {
            deactivate_pricing_table_addon_curl($theme, $shop);
            continue;
          }
          else
          {
            $content = $theme_style_content['asset']['value'] ?? '';
          }

          $pricingtable_Style = (string) '/* start-dbtfy-pricing-table */';
          $end = (string) '/* end-dbtfy-pricing-table */';
          $string = ' ' . $content;
          $ini = strpos($string, $pricingtable_Style);

          if ($ini == 0) {
            $parsed = '';
          }else{
            $ini += strlen($pricingtable_Style);
            $len = strpos($string, $end, $ini) - $ini;
            $parsed = substr($string, $ini, $len);
          }
          $values = $pricingtable_Style.''.$parsed.''.$end;

          if(str_contains($content,'dbtfy-pricing_table')){
              $value = str_replace($values, " ", $content);
              $new_theme_styles = (string) $value;

              $update_styles = $shop->api()->request(
                  'PUT',
                  '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                  ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
              );
          }

            //remove section
            $delete_pricing_table_snippet = $shop->api()->request(
              'DELETE',
              '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
              ['asset' => ['key' => 'sections/dbtfy-pricing-table.liquid'] ]
            );

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'templates/product.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,'dbtfy-pricing-table')){
                $value  =  explode('{% section "dbtfy-pricing-table" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }

                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'templates/product.liquid', 'value' => $new_prod_template] ]
                );
            }

        }
    }
}


if (! function_exists('deactivate_pricing_table_addon_curl')) {
  function deactivate_pricing_table_addon_curl($theme, $shop) {

    // remove scss
    $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid');

    $pricing_table_Style = (string) '/* start-dbtfy-pricing-table */';
    $end = (string) '/* end-dbtfy-pricing-table */';
    $string = ' ' . $theme_style_content;
    $ini = strpos($string, $pricing_table_Style);

    if ($ini == 0) {
      $parsed = '';
    }else{
      $ini += strlen($pricing_table_Style);
      $len = strpos($string, $end, $ini) - $ini;
      $parsed = substr($string, $ini, $len);
    }
    $values = $pricing_table_Style.''.$parsed.''.$end;

    if(str_contains($theme_style_content,'dbtfy-pricing_table')){
        $value = str_replace($values, " ", $theme_style_content);
        $new_theme_styles = (string) $value;

        $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
    }

    //remove section
    $delete_pricing_table_snippet = deleteThemeFilesCurl($shop, $theme, 'sections/dbtfy-pricing-table.liquid');

    // remove include
    $product_template = getThemeFileCurl($shop, $theme, 'templates/product.liquid') ?? '';

    if(str_contains($product_template,'dbtfy-pricing-table')){
        $value  =  explode('{% section "dbtfy-pricing-table" %}',$product_template,2);

        if(isset($value[0]) && isset($value[1])){
            $value = $value[0].' '.$value[1];
        }
        else{
            $value = (string) $product_template;
        }

        $new_prod_template = (string) $value;
        $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'templates/product.liquid');
    }

  }
}
?>
