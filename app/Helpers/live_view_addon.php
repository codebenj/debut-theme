<?php
//activate
if (! function_exists('activate_liveview_addon')) {
    function activate_liveview_addon($StoreThemes, $shop, $delivery_addon_activated) {
      	foreach ($StoreThemes as $theme) {

            // add schema
            try{
                $schema = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json'] ]
                )['body']['asset']['value'] ?? '';

                $liveview_addon_schema = (string) '
{
    "name": "Live view",
    "settings": [
      {
        "type": "header",
        "content": "Activation"
      },
      {
        "type": "checkbox",
        "id": "dbtfy_live_view",
        "label": "Activate",
        "default": false
      },
      {
        "type": "header",
        "content": "Settings"
      },
      {
        "type": "text",
        "id": "dbtfy_live_view_prefix",
        "label": "Prefix"
      },
      {
        "type": "text",
        "id": "dbtfy_live_view_people",
        "label": "People",
        "default": "People"
      },
      {
        "type": "text",
        "id": "dbtfy_live_view_suffix",
        "label": "Suffix",
        "default": "are viewing this right now"
      },
      {
        "type": "text",
        "id": "dbtfy_live_view_icon",
        "label":"Icon",
        "default": "eye",
        "info": "Enter the name of any free solid icons on [FontAwesome](https://fontawesome.com/icons?d=gallery&s=solid&m=free)"
      },
      {
        "type": "range",
        "id": "dbtfy_live_view_min",
        "label": "Min (people)",
        "min": 1,
        "max": 10,
        "step": 1,
        "default": 2
      },
      {
        "type": "range",
        "id": "dbtfy_live_view_max",
        "label": "Max (people)",
        "min": 2,
        "max": 100,
        "step": 1,
        "default": 8,
        "info": "Must be higher than min."
      },
      {
        "type": "range",
        "id": "dbtfy_live_view_interval",
        "label": "Interval time (seconds)",
        "min": 3,
        "max": 10,
        "step": 1,
        "default": 4
      }
    ]
  }';

                if( ( $badgePos = strpos( $schema , 'dbtfy_live_view' ) ) === false ) {
                    if( ( $pos = strrpos( $schema , ']' ) ) !== false ) {
                        $updated_schema    = substr_replace( $schema , ",".$liveview_addon_schema."]" , $pos );
                        $update_schema_settings = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update schema on live view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update schema on live view addon throws exception');
            }

            // add snippet
            try{
                $live_view_snippet = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
{%- if settings.dbtfy_live_view -%}
<div class="dbtfy dbtfy-live_view"
     data-max-view="{{settings.dbtfy_live_view_max}}"
     data-min-view="{{settings.dbtfy_live_view_min}}"
     data-interval-time="{{settings.dbtfy_live_view_interval}}000">
  <div id="LiveView">
    <div class="container-live_view">
      <div class="text-wrapper-live_view">
        {% unless settings.dbtfy_live_view_icon == "" %}
          <span class="fas fa-{{ settings.dbtfy_live_view_icon }} fa-fw"></span>
        {% endunless %}
        <span>{{ settings.dbtfy_live_view_prefix }}</span>
        <strong class="number-live_view"></strong>
        <strong>{{ settings.dbtfy_live_view_people }}</strong>
        <span class="text-live_view">{{ settings.dbtfy_live_view_suffix }}</span>
      </div>
    </div>
  </div>
</div>
{%- endif -%}';
                $live_view_snippet = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $live_view_snippet);

               $create_trustbadge_snippet = $shop->api()->request(
                            'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/dbtfy-live-view.liquid', 'value' => $live_view_snippet] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add live_view throws client exception');
            }
            catch(\Exception $e){
                logger('add live_view throws exception');
            }

            // add scss
            try{
                $styles = (string) '/* start-dbtfy-live-view */{% if settings.dbtfy_live_view %}.dbtfy-live_view{#LiveView{margin-bottom:$spacer}}{% endif %}/* end-dbtfy-live-view */';

                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-live-view' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);

                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on live_view addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on live_view addon throws exception');
            }

            // add include
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid'] ]
                )['body']['asset']['value'] ?? '';


                if( ( $pos = strpos( $product_template , 'dbtfy-live-view' ) ) === false ) {
                  if( ( $pos = strrpos( $product_template , '{% include "dbtfy-delivery-time" %}' ) ) !== false ) {
                      $new_prod_template = str_replace('{% include "dbtfy-delivery-time" %}', '{% include "dbtfy-live-view" %}{% include "dbtfy-delivery-time" %}', $product_template);
                      $update_prod_template = $shop->api()->request(
                          'PUT',
                          '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                          ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                      );
                  }
                  elseif( ( $pos = strrpos( $product_template , '<meta itemprop="priceCurrency" content="{{ shop.currency }}">' ) ) !== false ) {
                      $new_prod_template = str_replace('<meta itemprop="priceCurrency" content="{{ shop.currency }}">', '{% include "dbtfy-live-view" %}<meta itemprop="priceCurrency" content="{{ shop.currency }}">', $product_template);
                      $update_prod_template = $shop->api()->request(
                          'PUT',
                          '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                          ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                      );
                  }
                }

                // if($delivery_addon_activated == 0){
                //     if( ( $pos = strpos( $product_template , 'dbtfy-live-view' ) ) === false ) {
                //         if( ( $pos = strrpos( $product_template , '<meta itemprop="priceCurrency" content="{{ shop.currency }}">' ) ) !== false ) {
                //             $new_prod_template = str_replace('<meta itemprop="priceCurrency" content="{{ shop.currency }}">', '{% include "dbtfy-live-view" %} <meta itemprop="priceCurrency" content="{{ shop.currency }}">', $product_template);
                //             $update_prod_template = $shop->api()->request(
                //                 'PUT',
                //                 '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                //                 ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                //             );
                //         }
                //     }
                // }
                // else{
                //     if( ( $pos = strpos( $product_template , 'dbtfy-live-view' ) ) === false ) {
                //         if( ( $pos = strrpos( $product_template , '{% include "dbtfy-delivery-time" %} <meta itemprop="priceCurrency" content="{{ shop.currency }}">' ) ) !== false ) {
                //             $new_prod_template = str_replace('{% include "dbtfy-delivery-time" %} <meta itemprop="priceCurrency" content="{{ shop.currency }}">', '{% include "dbtfy-live-view" %} {% include "dbtfy-delivery-time" %} <meta itemprop="priceCurrency" content="{{ shop.currency }}">', $product_template);
                //
                //             $update_prod_template = $shop->api()->request(
                //                 'PUT',
                //                 '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                //                 ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                //             );
                //         }
                //     }
                // }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update live_view on trustbadge addon throws client exception');
            }
            catch(\Exception $e){
                logger('update live_view on trustbadge addon throws exception');
            }

            // add js addon
            try{
              $script= (string)'/* start-dbtfy-live-view */function themeLiveView() { {% if settings.dbtfy_live_view %} var _0xfcd9=["\x2E\x64\x62\x74\x66\x79\x2D\x6C\x69\x76\x65\x5F\x76\x69\x65\x77","\x6D\x61\x78\x2D\x76\x69\x65\x77","\x64\x61\x74\x61","\x6D\x69\x6E\x2D\x76\x69\x65\x77","\x69\x6E\x74\x65\x72\x76\x61\x6C\x2D\x74\x69\x6D\x65","\x72\x61\x6E\x64\x6F\x6D","\x66\x6C\x6F\x6F\x72","\x74\x65\x78\x74","\x2E\x6E\x75\x6D\x62\x65\x72\x2D\x6C\x69\x76\x65\x5F\x76\x69\x65\x77"];function LiveView(){var _0x4d1ex2=$(_0xfcd9[0]),_0x4d1ex3=_0x4d1ex2[_0xfcd9[2]](_0xfcd9[1]),_0x4d1ex4=_0x4d1ex2[_0xfcd9[2]](_0xfcd9[3]),_0x4d1ex5=_0x4d1ex2[_0xfcd9[2]](_0xfcd9[4]);function _0x4d1ex6(){var _0x4d1ex2=Math[_0xfcd9[6]](Math[_0xfcd9[5]]()* (_0x4d1ex3- _0x4d1ex4+ 1))+ _0x4d1ex4;$(_0xfcd9[8])[_0xfcd9[7]](_0x4d1ex2)}_0x4d1ex6();setInterval(_0x4d1ex6,_0x4d1ex5)}LiveView() {% endif %} };/* end-dbtfy-live-view */';

                // add js register
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_js_content , "/* start-register-live-view */" ) ) === false ) {
                        $new_theme_js = str_replace('var sections = new theme.Sections();', 'var sections = new theme.Sections();/* start-register-live-view */sections.register("product-template", themeLiveView);/* end-register-live-view */', $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }

                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';
                $replace_code= '/* start-dbtfy-addons */';
                if( ( $pos = strpos( $theme_js_content , '/* start-dbtfy-live-view */' ) ) === false ) {
                    $new_theme_js = str_replace($replace_code, $replace_code.$script, $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update js on cookie_box addon throws client exception');
            }
            catch(\Exception $e){
                logger('update js on cookie_box addon throws exception');
            }

        }
    }
}

// deactivate
if (! function_exists('deactivate_liveview_addon')) {
    function deactivate_liveview_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

            // remove schema
            $schema_get = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'config/settings_schema.json'] ]
            )['body'];

            if(!isset($schema_get['asset']['value']))
            {
                deactivate_liveview_addon_curl($theme, $shop);
                continue;
            }
            else
            {
                $schema = $schema_get['asset']['value'] ?? '';
            }

            if(str_contains($schema,'Live view')){
                $json = json_decode($schema, true);
                $json = array_filter($json, function ($obj) {
                  if (stripos($obj['name'], 'Live view') !== false) {
                      return false;
                  }
                  return true;
                });
                $value = json_encode(array_values($json));
                $updated_schema =  $value;
                $update_schema_settings = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                );
            }

            // remove scss
            $theme_style_content = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
            )['body']['asset']['value'] ?? '';

            // old style
            $styles = (string) '/*================ _Live_view ================*/ .dbtfy-live_view{ #LiveView{ margin-bottom: $spacer; } }';
            $trustbadge_Style2 = (string) '/*================ _Live_view ================*/';
            $end2 = (string) ' $spacer; } }';
            $string2 = ' ' . $theme_style_content;
            $ini2 = strpos($string2, $trustbadge_Style2);
            if ($ini2 == 0) {
                $parsed2 = '';
            }
            else{
                $ini2 += strlen($trustbadge_Style2);
                $len2 = strpos($string2, $end2, $ini2) - $ini2;
                $parsed2 = substr($string2, $ini2, $len2);
            }

            // old style
            $trustbadge_Style3 = (string) '/*================ start-dbtfy-Live_view ================*/';
            $end3 = (string) '/*================ end-dbtfy-Live_view ================*/';
            $string3 = ' ' . $theme_style_content;
            $ini3 = strpos($string3, $trustbadge_Style3);
            if ($ini3 == 0) {
                $parsed3 = '';
            }else{
                $ini3 += strlen($trustbadge_Style3);
                $len3 = strpos($string3, $end3, $ini3) - $ini3;
                $parsed3 = substr($string3, $ini3, $len3);
            }

            // new style
            $trustbadge_Style = (string) '/* start-dbtfy-live-view */';
            $end = (string) '/* end-dbtfy-live-view */';
            $string = ' ' . $theme_style_content;
            $ini = strpos($string, $trustbadge_Style);
            if ($ini == 0) {
                $parsed = '';
            }
            else{
                $ini += strlen($trustbadge_Style);
                $len = strpos($string, $end, $ini) - $ini;
                $parsed = substr($string, $ini, $len);
            }

            // result
            if($parsed3){
                $values = $trustbadge_Style3.''.$parsed3.''.$end3;
            }else if($parsed2){
                $values = $trustbadge_Style2.''.$parsed2.''.$end2;
            }else{
              if($parsed){
                  $values = $trustbadge_Style.''.$parsed.''.$end;
              }else{
                  $values = $styles;
              }
            }

            if(str_contains($theme_style_content,'dbtfy-live_view')){
                $value = str_replace($values, " ", $theme_style_content);
                $new_theme_styles = (string) $value;

                $update_styles = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                );
            }

            // remove snippet
            $delete_trustbadge_snippet = $shop->api()->request(
                'DELETE',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/dbtfy-live-view.liquid'] ]
            );

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/product-template.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,'dbtfy-live-view')){
                $value  =  explode('{% include "dbtfy-live-view" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }

                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove js addon
            try{
               $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                $trustbadge_js = (string) '/* start-dbtfy-live-view */';
                $end_js = (string) '/* end-dbtfy-live-view */';
                $string_js = ' ' . $theme_js_content;
                $ini_js = strpos($string_js, $trustbadge_js);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($trustbadge_js);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
                if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-live-view */')){
                    $value = str_replace($value_js, " ", $theme_js_content);
                    $new_theme_js = (string) $value;
                    if(str_contains($new_theme_js,'/* start-register-live-view */')){
                        $trustbadge_js1 = (string) '/* start-register-live-view */';
                        $end_js = (string) '/* end-register-live-view */';
                        $string_js = ' ' . $new_theme_js;
                        $ini_js = strpos($string_js, $trustbadge_js1);
                        if ($ini_js == 0) {
                            $parsed_js = '';
                        } else{
                            $ini_js += strlen($trustbadge_js1);
                            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                            $parsed_js = substr($string_js, $ini_js, $len_js);
                        }
                        $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                        $value = str_replace($value_js, " ", $new_theme_js);
                        $new_theme_js1 = (string) $value;
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js1] ]
                        );
                    }
                    else{
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add live_view throws client exception');
            }
            catch(\Exception $e){
                logger('add live_view throws exception');
            }
        }
    }
}


if (! function_exists('deactivate_liveview_addon_curl')) {
    function deactivate_liveview_addon_curl($theme, $shop) {

        // remove schema
        $schema = getThemeFileCurl($shop, $theme, 'config/settings_schema.json') ?? '';

        if(str_contains($schema,'Live view')){
            $json = json_decode($schema, true);
            $json = array_filter($json, function ($obj) {
              if (stripos($obj['name'], 'Live view') !== false) {
                  return false;
              }
              return true;
            });
            $value = json_encode(array_values($json));
            $updated_schema =  $value;
            $update_schema_settings = putThemeFileCurl($shop, $theme, $updated_schema, 'config/settings_schema.json');
        }

        // remove scss
        $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid') ?? '';

        // old style
        $styles = (string) '/*================ _Live_view ================*/ .dbtfy-live_view{ #LiveView{ margin-bottom: $spacer; } }';
        $trustbadge_Style2 = (string) '/*================ _Live_view ================*/';
        $end2 = (string) ' $spacer; } }';
        $string2 = ' ' . $theme_style_content;
        $ini2 = strpos($string2, $trustbadge_Style2);
        if ($ini2 == 0) {
            $parsed2 = '';
        }
        else{
            $ini2 += strlen($trustbadge_Style2);
            $len2 = strpos($string2, $end2, $ini2) - $ini2;
            $parsed2 = substr($string2, $ini2, $len2);
        }

        // old style
        $trustbadge_Style3 = (string) '/*================ start-dbtfy-Live_view ================*/';
        $end3 = (string) '/*================ end-dbtfy-Live_view ================*/';
        $string3 = ' ' . $theme_style_content;
        $ini3 = strpos($string3, $trustbadge_Style3);
        if ($ini3 == 0) {
            $parsed3 = '';
        }else{
            $ini3 += strlen($trustbadge_Style3);
            $len3 = strpos($string3, $end3, $ini3) - $ini3;
            $parsed3 = substr($string3, $ini3, $len3);
        }

        // new style
        $trustbadge_Style = (string) '/* start-dbtfy-live-view */';
        $end = (string) '/* end-dbtfy-live-view */';
        $string = ' ' . $theme_style_content;
        $ini = strpos($string, $trustbadge_Style);
        if ($ini == 0) {
            $parsed = '';
        }
        else{
            $ini += strlen($trustbadge_Style);
            $len = strpos($string, $end, $ini) - $ini;
            $parsed = substr($string, $ini, $len);
        }

        // result
        if($parsed3){
            $values = $trustbadge_Style3.''.$parsed3.''.$end3;
        }else if($parsed2){
            $values = $trustbadge_Style2.''.$parsed2.''.$end2;
        }else{
          if($parsed){
              $values = $trustbadge_Style.''.$parsed.''.$end;
          }else{
              $values = $styles;
          }
        }

        if(str_contains($theme_style_content,'dbtfy-live_view')){
            $value = str_replace($values, " ", $theme_style_content);
            $new_theme_styles = (string) $value;

            $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
        }

        // remove snippet
        $delete_trustbadge_snippet = deleteThemeFilesCurl($shop, $theme, 'snippets/dbtfy-live-view.liquid');

        // remove include
        $product_template = getThemeFileCurl($shop, $theme, 'snippets/product-template.liquid');

        if(str_contains($product_template,'dbtfy-live-view')){
            $value  =  explode('{% include "dbtfy-live-view" %}',$product_template,2);

            if(isset($value[0]) && isset($value[1])){
                $value = $value[0].' '.$value[1];
            }
            else{
                $value = (string) $product_template;
            }

            $new_prod_template = (string) $value;
            $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'snippets/product-template.liquid');
        }

        // remove js addon
        try{
           $theme_js_content = getThemeFileCurl($shop, $theme, 'assets/dbtfy-addons.js.liquid');
            if ($theme_js_content == null)
            {
                $theme_js_content = '';
            }
            $trustbadge_js = (string) '/* start-dbtfy-live-view */';
            $end_js = (string) '/* end-dbtfy-live-view */';
            $string_js = ' ' . $theme_js_content;
            $ini_js = strpos($string_js, $trustbadge_js);
            if ($ini_js == 0) {
                $parsed_js = '';
            } else{
                $ini_js += strlen($trustbadge_js);
                $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                $parsed_js = substr($string_js, $ini_js, $len_js);
            }
            $value_js = $trustbadge_js.''.$parsed_js.''.$end_js;
            if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-live-view */')){
                $value = str_replace($value_js, " ", $theme_js_content);
                $new_theme_js = (string) $value;
                if(str_contains($new_theme_js,'/* start-register-live-view */')){
                    $trustbadge_js1 = (string) '/* start-register-live-view */';
                    $end_js = (string) '/* end-register-live-view */';
                    $string_js = ' ' . $new_theme_js;
                    $ini_js = strpos($string_js, $trustbadge_js1);
                    if ($ini_js == 0) {
                        $parsed_js = '';
                    } else{
                        $ini_js += strlen($trustbadge_js1);
                        $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                        $parsed_js = substr($string_js, $ini_js, $len_js);
                    }
                    $value_js = $trustbadge_js1.''.$parsed_js.''.$end_js;

                    $value = str_replace($value_js, " ", $new_theme_js);
                    $new_theme_js1 = (string) $value;
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js1, 'assets/dbtfy-addons.js.liquid');
                }
                else{
                    $update_js = putThemeFileCurl($shop, $theme, $new_theme_js, 'assets/dbtfy-addons.js.liquid');
                }
            }
        }
        catch(\GuzzleHttp\Exception\ClientException $e){
            logger('add live_view throws client exception');
        }
        catch(\Exception $e){
            logger('add live_view throws exception');
        }
    }
}
?>
