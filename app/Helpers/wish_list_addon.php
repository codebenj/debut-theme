<?php
use Illuminate\Support\Arr;
//activate
if (! function_exists('activate_wish_list_addon')) {
    function activate_wish_list_addon($StoreThemes, $shop) {
        foreach ($StoreThemes as $theme) {

            //add schema
            try{
                $schema = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json'] ]
                )['body']['asset']['value'] ?? '';

                $liveview_addon_schema = (string) '
                {
                  "name": "Wish list",
                  "settings": [
                    {
                      "type": "header",
                      "content": "Activation"
                    },
                    {
                      "type": "checkbox",
                      "id": "dbtfy_wish_list",
                      "label": "Activate",
                      "default": false
                    },
                    {
                      "type": "header",
                      "content": "Settings"
                    },
                    {
                      "type": "page",
                      "id": "dbtfy_wish_list_page",
                      "label": "Wish list page",
                      "info": "Use the Template page.wish-list"
                    },
                    {
                      "type": "select",
                      "id": "dbtfy_wish_list_icon_placement",
                      "label": "Icon placement",
                      "default": "bottom-right",
                      "options": [
                        {
                          "value": "top-left",
                          "label": "Top left"
                        },
                        {
                          "value": "top-right",
                          "label": "Top right"
                        },
                        {
                          "value": "bottom-right",
                          "label": "Bottom right"
                        },
                        {
                          "value": "bottom-left",
                          "label": "Bottom left"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "id": "dbtfy_wish_list_empty_text",
                      "label": "Empty wishlist text",
                      "default": "Your wishlist is currently empty."
                    },
                    {
                      "type": "text",
                      "id": "dbtfy_wish_list_view_button_text",
                      "label": "View product button text",
                      "default": "View product"
                    }
                  ]
                }';

                if( ( $badgePos = strpos( $schema , 'dbtfy_wish_list' ) ) === false ) {
                    if( ( $pos = strrpos( $schema , ']' ) ) !== false ) {
                        $updated_schema = substr_replace( $schema , ",".$liveview_addon_schema."]" , $pos );

                        $update_schema_settings = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update schema on wish list addon throws client exception');
            }
            catch(\Exception $e){
                logger('update schema on wish list addon throws exception');
            }

            // add snippet
            try{
                $snippet = (string) '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}
              {%- if settings.dbtfy_wish_list -%}
                {%- if type == "page" -%}
                <div class="dbtfy dbtfy-wish_list">
                  <div id="WishlistPage" class="dbtfy dbtfy-wishlist" data-section-type="wish-list-page">
                    <div class="wl-no-item">
                      <p>{{ settings.dbtfy_wish_list_empty_text }}</p>
                      <a href="{{ settings.browsing_link }}" class="btn {{ settings.browsing_button_style}} cart--continue-browsing">{{ "cart.general.continue_browsing_html" | t }}</a>
                    </div>
                    <script id="WishlistTemplate" type="text/template">
                    {% raw %}
                    {{#items}}
                    <div id="WishlistItem-{{handle}}" class="grid grid--full grid-table wl-item">
                      <div class="grid__item large--one-quarter medium--one-quarter one-half">
                        <div class="grid-product__image-wrapper">
                          <a href="{{url}}" class="image-link">
                          <img src="{{img}}" alt="{{title}}" class="product--image lazyloaded">
                          </a>
                        </div>
                      </div>
                      <div class="grid__item large--one-quarter medium--one-quarter one-half">
                        <a href="{{url}}" class="cart__product-name">{{title}}</a>
                        <p class="cart__product-meta">
                          <a href="#" class="wl-remove" data-product-handle="{{handle}}"><span class="fas fa-times"></span> Remove</a>
                        </p>
                      </div>
                      <div class="grid__item large--one-quarter medium--one-quarter one-half">
                        <span class="cart__price">
                          {{#if discountsApplied}}
                          <span class="price-compare">{{{discountedPrice}}}</span>
                          <span class="on-sale">{{{price}}}</span>
                          {{else}}
                          <span class="price">{{{price}}}</span>
                          {{/if}}
                        </span>
                      </div>
                      <div class="grid__item large--one-quarter medium--one-quarter one-half">
                        <a href="{{url}}" class="btn btn-outline-primary btn--small large--right">
                          <span class="btn__text">
                            <span class="fas fa-eye" aria-hidden="true"></span>
                            {% endraw %}
                              {{ settings.dbtfy_wish_list_view_button_text }}
                            {% raw %}
                          </span>
                        </a>
                      </div>
                    </div>
                    {{/items}}
                    {% endraw %}
                    </script>
                  </div>
                </div>
                {%- elsif type == "menu" -%}
                    <div class="dbtfy dbtfy-wish_list">
                      <a href="/pages/{{ settings.dbtfy_wish_list_page }}" class="site-nav__link site-nav__link--icon wishlist-link">
                        <span class="icon-fallback-text">
                          <span class="fas fa-heart fa-fw" aria-hidden="true"></span>
                        </span>
                        <span class="wishlist__bubble cart-link__bubble--visible animated infinite rubberBand"></span>
                      </a>
                    </div>
                  </li>
                <li class="site-nav__item">
                {%- elsif type == "button" -%}
                <div class="dbtfy dbtfy-wish_list">
                  <div class="dbtfy-wishlist-btn">
                    <button class="wl-add wl-icon btn btn-outline-primary btn-square-small"
                            data-product-handle="{{product.handle}}">
                      <span class="fas fa-heart"></span>
                    </button>
                    <script>
                      window.wishlist["{{ product.handle }}"] = {{ product | json }};
                    </script>
                  </div>
                </div>
                {%- elsif type == "script" -%}
                window.wishlist = window.wishlist || {};
                {%- else -%}
                <div class="dbtfy dbtfy-wish_list">
                  <div class="dbtfy-wishlist-icon tag-wrapper tag-{{ settings.dbtfy_wish_list_icon_placement }}">
                    <button class="wl-add wl-icon btn btn-outline-primary btn-square-small"
                            data-product-handle="{{product.handle}}">
                      <span class="fas fa-heart"></span>
                    </button>
                    <script>
                      window.wishlist["{{ product.handle }}"] = {{ product | json }};
                    </script>
                  </div>
                </div>
                {%- endif -%}
              {%- endif -%}';
               $snippet = addScriptTagCondition($shop, '{%- comment -%}Please do not edit this file. Any modification can be lost as it is automatically updated by Debutify{%- endcomment -%}', $snippet);
               $create_wish_list_snippet = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/dbtfy-wish-list.liquid', 'value' => $snippet] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('add wish list throws client exception');
            }
            catch(\Exception $e){
                logger('add wish list throws exception');
            }

            // add scss
            try{
                $styles = (string) '/* start-dbtfy-wish-list */ {% if settings.dbtfy_wish_list %} .dbtfy-wish_list { .wishlist-link{ position:relative; } .wishlist__bubble { display: none; } .wishlist__bubble--visible { display: block; } .wl-icon { .grid-product__wrapper &{ opacity:0; @include screen($small){ opacity: 1; } } .grid-product__wrapper:hover &{ opacity: 1; } } .dbtfy-wishlist-btn { position:absolute; margin-top:-($heightInputSmall+$gutter-sm); right:$gutter-sm; z-index: $zindexBase+1; } .wl-active { @include button($colorPrimary,$colorButtonText); opacity:1!important; } .dbtfy-wishlist { .wl-item { padding-bottom: $gutter; border-bottom: $borders; margin-bottom: $gutter; @include animated(heroContentIn); &:last-child { border-bottom:0; padding-bottom:0; margin-bottom:0; } } .wl-no-item { display: none; text-align: center; } .grid-table { display: table; .grid__item { display: table-cell; vertical-align: middle; float: none; @include screen($small){ display: block; float: left; } } } .cart__product-name{ color:$colorBodyText; } .cart__price { @include screen($small){ display: block; margin-bottom: $spacer-sm; } } } } .product-photos{ position:relative; } {% endif %} /* end-dbtfy-wish-list */';

                $theme_style_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_style_content , 'start-dbtfy-wish-list' ) ) === false ) {
                    $new_theme_styles = str_replace($theme_style_content, $theme_style_content.$styles, $theme_style_content);
                    $add_styles = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update CSS on wish list addon throws client exception');
            }
            catch(\Exception $e){
                logger('update CSS on wish list addon throws exception');
            }

            // add include
            try{
                $theme_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid'] ]
                )['body']['asset']['value'] ?? '';
              if( ( $pos = strpos( $theme_template , 'dbtfy-wish-list' ) ) === false ) {

                  if( ( $pos = strrpos( $theme_template , '</body>' ) ) !== false ) {
                      $new_theme_template = str_replace('window.theme = window.theme || {};', 'window.theme = window.theme || {};{% include "dbtfy-wish-list", type: "script" %}', $theme_template);
                      $update_theme_template = $shop->api()->request(
                          'PUT',
                          '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                          ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_theme_template] ]
                      );
                  }
              }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update theme on wish-list addon throws client exception');
            }
            catch(\Exception $e){
                logger('update theme on wish-list addon throws exception');
            }

            // add include
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-grid-item.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-wish-list' ) ) === false ) {
                    if( ( $pos = strpos( $product_template , '</a>' ) ) !== false ) {
                        // search for first instance of </a>
                        $new_prod_template = preg_replace('/<\/a>/', '</a>{% include "dbtfy-wish-list" %}', $product_template, 1);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'snippets/product-grid-item.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update product-grid-item on wish list addon throws client exception');
            }
            catch(\Exception $e){
                logger('update product-grid-item on wish list addon throws exception');
            }

            // add include
            try{
                $header_section = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'sections/header.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $header_section , 'dbtfy-wish-list' ) ) === false ) {
                    if( ( $pos = strpos( $header_section , '<div class="nav-containers nav-container-right-icons">' ) ) !== false ) {
                        // search for cart icon
                        $new_header_section = preg_replace('/<a href="\/cart" class="site-nav__link site-nav__link--icon cart-link js-drawer-open-button-right" aria-controls="CartDrawer">/', '{% include "dbtfy-wish-list", type:"menu" %}<a href="/cart" class="site-nav__link site-nav__link--icon cart-link js-drawer-open-button-right" aria-controls="CartDrawer">', $header_section, 1);
                        $update_header_section = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'sections/header.liquid', 'value' => $new_header_section] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update header on wish list addon throws client exception');
            }
            catch(\Exception $e){
                logger('update header on wish list addon throws exception');
            }

            // add snippet
            try{
              $new_wishlist_template ='<div class="grid">
                <div class="grid__item large--eight-twelfths push--large--two-twelfths">
                  <div class="section-header">
                    <h1 class="page-title">{{ page.title }}</h1>
                  </div>
                  {% unless page.content == blank %}
                  <div class="rte">
                    {{ page.content }}
                  </div>
                  {% endunless %}
                </div>
              </div>

              {% if settings.dbtfy_wish_list %}
                {% include "dbtfy-wish-list", type: "page" %}
              {% endif %}';

                $update_wishlist_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'templates/page.wish-list.liquid', 'value' => $new_wishlist_template] ]
                );
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update page template on wishlist addon throws client exception');
            }
            catch(\Exception $e){
                logger('update page template on wishlist addon throws exception');
            }

            // Update product template
            try{
                $product_template = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $product_template , 'dbtfy-wish-list' ) ) === false ) {

                    if( ( $pos = strrpos( $product_template , '{% if product.images.size > 1 %}' ) ) !== false ) {
                        $new_prod_template = str_replace('{% if product.images.size > 1 %}', '{% include "dbtfy-wish-list", type:"button" %}{% if product.images.size > 1 %}', $product_template);
                        $update_prod_template = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update product-template on wish list addon throws client exception');
            }
            catch(\Exception $e){
                logger('update product-template on wish list addon throws exception');
            }

            // add js addon
            try{
              $script= (string)'/* start-dbtfy-wish-list */ function themeWishList() { {%- if settings.dbtfy_wish_list -%} var _0x50fb=["\x2E\x77\x6C\x2D\x6E\x6F\x2D\x69\x74\x65\x6D","\x2E\x77\x69\x73\x68\x6C\x69\x73\x74\x5F\x5F\x62\x75\x62\x62\x6C\x65","\x77\x6C\x2D\x61\x63\x74\x69\x76\x65","\x23\x57\x69\x73\x68\x6C\x69\x73\x74\x49\x74\x65\x6D\x2D","\x77\x69\x73\x68\x6C\x69\x73\x74","\x67\x65\x74\x49\x74\x65\x6D","\x70\x61\x72\x73\x65","\x70\x75\x73\x68","\x73\x74\x72\x69\x6E\x67\x69\x66\x79","\x73\x65\x74\x49\x74\x65\x6D","\x72\x65\x6D\x6F\x76\x65","\x67\x72\x65\x70","\x72\x65\x6D\x6F\x76\x65\x49\x74\x65\x6D","\x6C\x65\x6E\x67\x74\x68","\x77\x69\x73\x68\x6C\x69\x73\x74\x5F\x5F\x62\x75\x62\x62\x6C\x65\x2D\x2D\x76\x69\x73\x69\x62\x6C\x65","\x61\x64\x64\x43\x6C\x61\x73\x73","\x68\x69\x64\x65","\x72\x65\x6D\x6F\x76\x65\x43\x6C\x61\x73\x73","\x73\x68\x6F\x77","\x2E\x77\x6C\x2D\x61\x64\x64","\x2E\x77\x6C\x2D\x61\x64\x64\x5B\x64\x61\x74\x61\x2D\x70\x72\x6F\x64\x75\x63\x74\x2D\x68\x61\x6E\x64\x6C\x65\x3D\x27","\x27\x5D","\x65\x61\x63\x68","\x63\x6C\x69\x63\x6B","\x64\x61\x74\x61\x2D\x70\x72\x6F\x64\x75\x63\x74\x2D\x68\x61\x6E\x64\x6C\x65","\x61\x74\x74\x72","\x68\x61\x73\x43\x6C\x61\x73\x73","\x74\x6F\x67\x67\x6C\x65\x43\x6C\x61\x73\x73","\x6F\x6E","\x2E\x77\x6C\x2D\x72\x65\x6D\x6F\x76\x65","\x70\x72\x65\x76\x65\x6E\x74\x44\x65\x66\x61\x75\x6C\x74","\x62\x6F\x64\x79","\x23\x70\x72\x6F\x64\x75\x63\x74\x52\x65\x63\x6F\x6D\x6D\x65\x6E\x64\x61\x74\x69\x6F\x6E\x73\x53\x65\x63\x74\x69\x6F\x6E","\x2E\x70\x72\x6F\x64\x75\x63\x74\x2D\x72\x65\x63\x6F\x6D\x6D\x65\x6E\x64\x61\x74\x69\x6F\x6E\x73","\x77\x69\x73\x68\x2D\x6C\x69\x73\x74\x2D\x70\x61\x67\x65","\x23\x57\x69\x73\x68\x6C\x69\x73\x74\x50\x61\x67\x65","\x68\x74\x6D\x6C","\x23\x57\x69\x73\x68\x6C\x69\x73\x74\x54\x65\x6D\x70\x6C\x61\x74\x65","\x63\x6F\x6D\x70\x69\x6C\x65","\x66\x65\x61\x74\x75\x72\x65\x64\x5F\x69\x6D\x61\x67\x65","\x68\x74\x74\x70\x3A","","\x72\x65\x70\x6C\x61\x63\x65","\x5F\x31\x35\x30\x78\x24\x31","\x2F\x2F\x63\x64\x6E\x2E\x73\x68\x6F\x70\x69\x66\x79\x2E\x63\x6F\x6D\x2F\x73\x2F\x61\x73\x73\x65\x74\x73\x2F\x61\x64\x6D\x69\x6E\x2F\x6E\x6F\x2D\x69\x6D\x61\x67\x65\x2D\x6D\x65\x64\x69\x75\x6D\x2D\x63\x63\x39\x37\x33\x32\x63\x62\x39\x37\x36\x64\x64\x33\x34\x39\x61\x30\x64\x66\x31\x64\x33\x39\x38\x31\x36\x66\x62\x63\x63\x37\x2E\x67\x69\x66","\x68\x61\x6E\x64\x6C\x65","\x74\x69\x74\x6C\x65","\x2F\x70\x72\x6F\x64\x75\x63\x74\x73\x2F","\x70\x72\x69\x63\x65","\x6D\x6F\x6E\x65\x79\x46\x6F\x72\x6D\x61\x74","\x73\x74\x72\x69\x6E\x67\x73","\x66\x6F\x72\x6D\x61\x74\x4D\x6F\x6E\x65\x79","\x43\x75\x72\x72\x65\x6E\x63\x79","\x63\x6F\x6D\x70\x61\x72\x65\x5F\x61\x74\x5F\x70\x72\x69\x63\x65","\x61\x70\x70\x65\x6E\x64","\x72\x65\x67\x69\x73\x74\x65\x72","\x53\x65\x63\x74\x69\x6F\x6E\x73"];function WishList(){var _0xbb38x2,_0xbb38x3,_0xbb38x4,_0xbb38x5=$(_0x50fb[0]),_0xbb38x6=$(_0x50fb[1]),_0xbb38x7=_0x50fb[2];function _0xbb38x8(_0xbb38x9,_0xbb38x3){var _0xbb38x4=$(_0x50fb[3]+ _0xbb38x3);_0xbb38x2= JSON[_0x50fb[6]](localStorage[_0x50fb[5]](_0x50fb[4])),_0xbb38x9?(null== _0xbb38x2?_0xbb38x2= [_0xbb38x3]:_0xbb38x2[_0x50fb[7]](_0xbb38x3),localStorage[_0x50fb[9]](_0xbb38x3,JSON[_0x50fb[8]](window[_0x50fb[4]][_0xbb38x3]))):(_0xbb38x4[_0x50fb[10]](),_0xbb38x2= jQuery[_0x50fb[11]](_0xbb38x2,function(_0xbb38x9){return _0xbb38x9!= _0xbb38x3}),localStorage[_0x50fb[12]](_0xbb38x3)),_0xbb38x2&& _0xbb38x2[_0x50fb[13]]?(_0xbb38x6[_0x50fb[15]](_0x50fb[14]),_0xbb38x5[_0x50fb[16]]()):(_0xbb38x6[_0x50fb[17]](_0x50fb[14]),_0xbb38x5[_0x50fb[18]]()),localStorage[_0x50fb[9]](_0x50fb[4],JSON[_0x50fb[8]](_0xbb38x2))}_0xbb38x3= function(){var _0xbb38x9=$(_0x50fb[19]);(_0xbb38x2= JSON[_0x50fb[6]](localStorage[_0x50fb[5]](_0x50fb[4])))&& _0xbb38x2[_0x50fb[13]]&& ($[_0x50fb[22]](_0xbb38x2,function(){$(_0x50fb[20]+ this+ _0x50fb[21])[_0x50fb[15]](_0xbb38x7)}),_0xbb38x6[_0x50fb[15]](_0x50fb[14])),_0xbb38x9[_0x50fb[28]](_0x50fb[23],function(){var _0xbb38x9=$(this)[_0x50fb[25]](_0x50fb[24]);_0xbb38x8(!$(this)[_0x50fb[26]](_0xbb38x7),_0xbb38x9),$(this)[_0x50fb[27]](_0xbb38x7)}),$(_0x50fb[31])[_0x50fb[28]](_0x50fb[23],_0x50fb[29],function(_0xbb38x9){_0xbb38x9[_0x50fb[30]](),_0xbb38x8(!1,$(this)[_0x50fb[25]](_0x50fb[24]))})},$(_0x50fb[32])[0]?(_0xbb38x4= 1,function _0xbb38x9(){$(_0x50fb[33])[0]?_0xbb38x3():setTimeout(function(){10== _0xbb38x4?_0xbb38x3():(_0xbb38x4++,_0xbb38x9())},100)}()):_0xbb38x3(),( new theme[_0x50fb[56]])[_0x50fb[55]](_0x50fb[34],function(){var _0xbb38x4,_0xbb38x9=$(_0x50fb[35]),_0xbb38x2=[],_0xbb38x6={},_0xbb38x3={},_0xbb38x7=$(_0x50fb[37])[_0x50fb[36]](),_0xbb38x8=Handlebars[_0x50fb[38]](_0xbb38x7),_0xbb38xa=JSON[_0x50fb[6]](localStorage[_0x50fb[5]](_0x50fb[4]));_0xbb38xa&& _0xbb38xa[_0x50fb[13]]?(_0xbb38x5[_0x50fb[16]](),$[_0x50fb[22]](_0xbb38xa,function(_0xbb38x9){var _0xbb38x3=null!== (_0xbb38x4= JSON[_0x50fb[6]](localStorage[_0x50fb[5]](this)))[_0x50fb[39]]?_0xbb38x4[_0x50fb[39]][_0x50fb[42]](/(\.[^.]*)$/,_0x50fb[43])[_0x50fb[42]](_0x50fb[40],_0x50fb[41]):_0x50fb[44];_0xbb38x6= {handle:_0xbb38x4[_0x50fb[45]],title:_0xbb38x4[_0x50fb[46]],url:_0x50fb[47]+ _0xbb38x4[_0x50fb[45]],img:_0xbb38x3,price:theme[_0x50fb[52]][_0x50fb[51]](_0xbb38x4[_0x50fb[48]],theme[_0x50fb[50]][_0x50fb[49]]),discountedPrice:theme[_0x50fb[52]][_0x50fb[51]](_0xbb38x4[_0x50fb[53]],theme[_0x50fb[50]][_0x50fb[49]]),discountsApplied:0< _0xbb38x4[_0x50fb[53]]},_0xbb38x2[_0x50fb[7]](_0xbb38x6)}),_0xbb38x3= {items:_0xbb38x2},_0xbb38x9[_0x50fb[54]](_0xbb38x8(_0xbb38x3))):_0xbb38x5[_0x50fb[18]]()})}WishList() {%- endif -%} } /* end-dbtfy-wish-list */ ';

                // add js register
                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                if( ( $pos = strpos( $theme_js_content , '/* start-register-wish-list */' ) ) === false ) {
                    $new_theme_js = str_replace('var sections = new theme.Sections();', 'var sections = new theme.Sections(); /* start-register-wish-list */themeWishList();/* end-register-wish-list */', $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }

                $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';
                $replace_code= '/* start-dbtfy-addons */';
                if( ( $pos = strpos( $theme_js_content , '/* start-dbtfy-wish-list */' ) ) === false ) {
                        $new_theme_js = str_replace($replace_code, $replace_code.$script, $theme_js_content);

                    $add_js = $shop->api()->request(
                        'PUT',
                        '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                        ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                    );
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('update js on wish list addon throws client exception');
            }
            catch(\Exception $e){
                logger('update js on wish list addon throws exception');
            }

            sleep(1);
            try{
              $themeJS_file = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.js.liquid'] ]
              )['body']['asset']['value'] ?? '';

              $themejs = (string) "{% if settings.cart_type == 'drawer' or settings.dbtfy_wish_list";
              if( ( $jsPos = strpos( $themeJS_file , $themejs  ) ) === false ) {
                  $updated_themeJS = str_replace( "{% if settings.cart_type == 'drawer'", $themejs , $themeJS_file );
                  $updated_themeJS_file = $shop->api()->request(
                      'PUT',
                      '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                      ['asset' => ['key' => 'assets/theme.js.liquid', 'value' => $updated_themeJS] ]
                  );
              }
            }
            catch(\Exception $e){
              logger('update js on wish list addon throws exception');
            }

            sleep(5);
            try{
              $themeJS_file = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.js.liquid'] ]
              )['body']['asset']['value'] ?? '';

              $themejs = (string) "(s,o,a,f,l);return c}();{% endif %}{% if settings.cart_type == 'drawer' %}";
              if( ( $jsPos = strpos( $themeJS_file , $themejs  ) ) === false ) {
                  $updated_themeJS = str_replace( "(s,o,a,f,l);return c}();", $themejs , $themeJS_file );
                  $updated_themeJS_file = $shop->api()->request(
                      'PUT',
                      '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                      ['asset' => ['key' => 'assets/theme.js.liquid', 'value' => $updated_themeJS] ]
                  );
              }
            }
            catch(\Exception $e){
              logger('update js on wish list addon throws exception');
            }

        }
    }
}

// deactivate
if (! function_exists('deactivate_wish_list_addon')) {
    function deactivate_wish_list_addon($StoreThemes, $shop, $checkaddon) {
        foreach ($StoreThemes as $theme) {

            // remove schema
            $schema_get = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'config/settings_schema.json'] ]
            )['body'];

            if(!isset($schema_get['asset']['value']))
            {
                deactivate_wish_list_addon_curl($theme, $shop);
                continue;
            }
            else
            {
                $schema = $schema_get['asset']['value'] ?? '';
            }

            $json = json_decode($schema, true);
            $json = array_filter($json, function ($obj) {
                if (stripos($obj['name'], 'Wish list') !== false) {
                    return false;
                }
                return true;
            });

            if(str_contains($schema,'Wish list')){
                $value = json_encode(array_values($json));
                $updated_schema = $value;

                $update_schema_settings = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'config/settings_schema.json', 'value' => $updated_schema] ]
                );
            }

            // remove scss
            $theme_style_content = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'assets/theme.scss.liquid'] ]
            )['body']['asset']['value'] ?? '';

            $wishlist_Style = (string) '/* start-dbtfy-wish-list */';
            $end = (string) '/* end-dbtfy-wish-list */';
            $string = ' ' . $theme_style_content;
            $ini = strpos($string, $wishlist_Style);

            if ($ini == 0) {
              $parsed = '';
            }else{
              $ini += strlen($wishlist_Style);
              $len = strpos($string, $end, $ini) - $ini;
              $parsed = substr($string, $ini, $len);
            }
            $values = $wishlist_Style.''.$parsed.''.$end;

            if(str_contains($theme_style_content,'dbtfy-wish_list')){
                $value = str_replace($values, " ", $theme_style_content);
                $new_theme_styles = (string) $value;

                $update_styles = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.scss.liquid', 'value' => $new_theme_styles] ]
                );
            }

            // remove snippet
            $delete_wishlist_snippet = $shop->api()->request(
              'DELETE',
              '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
              ['asset' => ['key' => 'snippets/dbtfy-wish-list.liquid'] ]
            );


            // remove template
            $delete_wishlist_template = $shop->api()->request(
              'DELETE',
              '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
              ['asset' => ['key' => 'templates/page.wish-list.liquid'] ]
            );

            // remove include
            $theme_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'layout/theme.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($theme_template,"dbtfy-wish-list")){
                $value  =  explode('{% include "dbtfy-wish-list", type: "script" %}',$theme_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else {
                    $value = (string) $theme_template;
                }

                $new_theme_template = (string) $value;

                $update_theme_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'layout/theme.liquid', 'value' => $new_theme_template] ]
                );
            }

            // remove include
            $header_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'sections/header.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($header_template,'dbtfy-wish-list')){
                $value  =  explode('{% include "dbtfy-wish-list", type:"menu" %}',$header_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $header_template;
                }

                $new_header_template = (string) $value;
                $update_header_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'sections/header.liquid', 'value' => $new_header_template] ]
                );
            }

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/product-grid-item.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,'dbtfy-wish-list')){
                $value  =  explode('{% include "dbtfy-wish-list" %}',$product_template,2);
                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }
                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-grid-item.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove include
            $product_template = $shop->api()->request(
                'GET',
                '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                ['asset' => ['key' => 'snippets/product-template.liquid'] ]
            )['body']['asset']['value'] ?? '';

            if(str_contains($product_template,'dbtfy-wish-list')){
                $value  =  explode('{% include "dbtfy-wish-list", type:"button" %}',$product_template,2);

                if(isset($value[0]) && isset($value[1])){
                    $value = $value[0].' '.$value[1];
                }
                else{
                    $value = (string) $product_template;
                }

                $new_prod_template = (string) $value;
                $update_prod_template = $shop->api()->request(
                    'PUT',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'snippets/product-template.liquid', 'value' => $new_prod_template] ]
                );
            }

            // remove js addon
            try{
               $theme_js_content = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid'] ]
                )['body']['asset']['value'] ?? '';

                $wishlist_js = (string) '/* start-dbtfy-wish-list */';
                $end_js = (string) '/* end-dbtfy-wish-list */';
                $string_js = ' ' . $theme_js_content;
                $ini_js = strpos($string_js, $wishlist_js);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($wishlist_js);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $wishlist_js.''.$parsed_js.''.$end_js;
                if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-wish-list */')){
                    $value = str_replace($value_js, " ", $theme_js_content);
                    $new_theme_js = (string) $value;
                    if(str_contains($new_theme_js,'/* start-register-wish-list */')){
                        $wishlist_js1 = (string) '/* start-register-wish-list */';
                        $end_js = (string) '/* end-register-wish-list */';
                        $string_js = ' ' . $new_theme_js;
                        $ini_js = strpos($string_js, $wishlist_js1);
                        if ($ini_js == 0) {
                            $parsed_js = '';
                        } else{
                            $ini_js += strlen($wishlist_js1);
                            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                            $parsed_js = substr($string_js, $ini_js, $len_js);
                        }
                        $value_js = $wishlist_js1.''.$parsed_js.''.$end_js;

                        $value = str_replace($value_js, " ", $new_theme_js);
                        $new_theme_js1 = (string) $value;
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js1] ]
                        );
                    }
                    else{
                        $update_js = $shop->api()->request(
                            'PUT',
                            '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                            ['asset' => ['key' => 'assets/dbtfy-addons.js.liquid', 'value' => $new_theme_js] ]
                        );
                    }
                }
            }
            catch(\GuzzleHttp\Exception\ClientException $e){
                logger('remove wish list throws client exception');
            }
            catch(\Exception $e){
                logger('remove wish list throws exception');
            }


            sleep(1);
            try{
              $themeJS_file = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.js.liquid'] ]
              )['body']['asset']['value'] ?? '';

              $themejs = (string) "{% if settings.cart_type == 'drawer' or settings.dbtfy_wish_list";
              if( ( $jsPos = strpos( $themeJS_file , $themejs  ) ) !== false ) {
                  $updated_themeJS = str_replace( $themejs, "{% if settings.cart_type == 'drawer'",  $themeJS_file );
                  $updated_themeJS_file = $shop->api()->request(
                      'PUT',
                      '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                      ['asset' => ['key' => 'assets/theme.js.liquid', 'value' => $updated_themeJS] ]
                  );
              }
            }
            catch(\Exception $e){
              logger('update js on wish list addon throws exception');
            }

            sleep(5);
            try{
              $themeJS_file = $shop->api()->request(
                    'GET',
                    '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                    ['asset' => ['key' => 'assets/theme.js.liquid'] ]
              )['body']['asset']['value'] ?? '';

              $themejs = (string) "(s,o,a,f,l);return c}();{% endif %}{% if settings.cart_type == 'drawer' %}";
              if( ( $jsPos = strpos( $themeJS_file , $themejs  ) ) !== false ) {
                  $updated_themeJS = str_replace( $themejs , "(s,o,a,f,l);return c}();", $themeJS_file );
                  $updated_themeJS_file = $shop->api()->request(
                      'PUT',
                      '/admin/api/themes/'.$theme->shopify_theme_id.'/assets.json',
                      ['asset' => ['key' => 'assets/theme.js.liquid', 'value' => $updated_themeJS] ]
                  );
              }
            }
            catch(\Exception $e){
              logger('update js on wish list addon throws exception');
            }

        }
    }
}


if (! function_exists('deactivate_wish_list_addon_curl')) {
  function deactivate_wish_list_addon_curl($theme, $shop) {

    // remove schema
    $schema = getThemeFileCurl($shop, $theme, 'config/settings_schema.json') ?? '';

    $json = json_decode($schema, true);
    $json = array_filter($json, function ($obj) {
        if (stripos($obj['name'], 'Wish list') !== false) {
            return false;
        }
        return true;
    });

    if(str_contains($schema,'Wish list')){
        $value = json_encode(array_values($json));
        $updated_schema = $value;

        $update_schema_settings = putThemeFileCurl($shop, $theme, $updated_schema, 'config/settings_schema.json');
    }

    // remove scss
    $theme_style_content = getThemeFileCurl($shop, $theme, 'assets/theme.scss.liquid');

    $wishlist_Style = (string) '/* start-dbtfy-wish-list */';
    $end = (string) '/* end-dbtfy-wish-list */';
    $string = ' ' . $theme_style_content;
    $ini = strpos($string, $wishlist_Style);

    if ($ini == 0) {
      $parsed = '';
    }else{
      $ini += strlen($wishlist_Style);
      $len = strpos($string, $end, $ini) - $ini;
      $parsed = substr($string, $ini, $len);
    }
    $values = $wishlist_Style.''.$parsed.''.$end;

    if(str_contains($theme_style_content,'dbtfy-wish_list')){
        $value = str_replace($values, " ", $theme_style_content);
        $new_theme_styles = (string) $value;

        $update_styles = putThemeFileCurl($shop, $theme, $new_theme_styles, 'assets/theme.scss.liquid');
    }

    // remove snippet
    $delete_wishlist_snippet = deleteThemeFilesCurl($shop, $theme, 'snippets/dbtfy-wish-list.liquid');

    // remove template
    $delete_wishlist_template = deleteThemeFilesCurl($shop, $theme, 'templates/page.wish-list.liquid');

    // remove include
    $theme_template = getThemeFileCurl($shop, $theme, 'layout/theme.liquid');

    // remove include
    $header_template = getThemeFileCurl($shop, $theme, 'sections/header.liquid');

    if(str_contains($header_template,'dbtfy-wish-list')){
        $value  =  explode('{% include "dbtfy-wish-list", type:"menu" %}',$header_template,2);

        if(isset($value[0]) && isset($value[1])){
            $value = $value[0].' '.$value[1];
        }
        else{
            $value = (string) $header_template;
        }

        $new_header_template = (string) $value;
        $update_header_template = putThemeFileCurl($shop, $theme, $new_header_template, 'sections/header.liquid');
    }

    // remove include
    $product_template = getThemeFileCurl($shop, $theme, 'snippets/product-grid-item.liquid') ?? '';

    if(str_contains($product_template,'dbtfy-wish-list')){
        $value  =  explode('{% include "dbtfy-wish-list" %}',$product_template,2);
        if(isset($value[0]) && isset($value[1])){
            $value = $value[0].' '.$value[1];
        }
        else{
            $value = (string) $product_template;
        }
        $new_prod_template = (string) $value;
        $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'snippets/product-grid-item.liquid');
    }

    // remove include
    $product_template = getThemeFileCurl($shop, $theme, 'snippets/product-template.liquid') ?? '';

    if(str_contains($product_template,'dbtfy-wish-list')){
        $value  =  explode('{% include "dbtfy-wish-list", type:"button" %}',$product_template,2);

        if(isset($value[0]) && isset($value[1])){
            $value = $value[0].' '.$value[1];
        }
        else{
            $value = (string) $product_template;
        }

        $new_prod_template = (string) $value;
        $update_prod_template = putThemeFileCurl($shop, $theme, $new_prod_template, 'snippets/product-template.liquid');
    }

    // remove js addon
    try{
       $theme_js_content = getThemeFileCurl($shop, $theme, 'assets/dbtfy-addons.js.liquid') ?? '';

        $wishlist_js = (string) '/* start-dbtfy-wish-list */';
        $end_js = (string) '/* end-dbtfy-wish-list */';
        $string_js = ' ' . $theme_js_content;
        $ini_js = strpos($string_js, $wishlist_js);
        if ($ini_js == 0) {
            $parsed_js = '';
        } else{
            $ini_js += strlen($wishlist_js);
            $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
            $parsed_js = substr($string_js, $ini_js, $len_js);
        }
        $value_js = $wishlist_js.''.$parsed_js.''.$end_js;
        if(!empty($theme_js_content) && str_contains($theme_js_content,'/* start-dbtfy-wish-list */')){
            $value = str_replace($value_js, " ", $theme_js_content);
            $new_theme_js = (string) $value;
            if(str_contains($new_theme_js,'/* start-register-wish-list */')){
                $wishlist_js1 = (string) '/* start-register-wish-list */';
                $end_js = (string) '/* end-register-wish-list */';
                $string_js = ' ' . $new_theme_js;
                $ini_js = strpos($string_js, $wishlist_js1);
                if ($ini_js == 0) {
                    $parsed_js = '';
                } else{
                    $ini_js += strlen($wishlist_js1);
                    $len_js = strpos($string_js, $end_js, $ini_js) - $ini_js;
                    $parsed_js = substr($string_js, $ini_js, $len_js);
                }
                $value_js = $wishlist_js1.''.$parsed_js.''.$end_js;

                $value = str_replace($value_js, " ", $new_theme_js);
                $new_theme_js1 = (string) $value;
                $update_js = putThemeFileCurl($shop, $theme, $new_theme_js1, 'assets/dbtfy-addons.js.liquid');
            }
            else{
                $update_js = putThemeFileCurl($shop, $theme, $new_theme_js, 'assets/dbtfy-addons.js.liquid');
            }
        }
    }
    catch(\GuzzleHttp\Exception\ClientException $e){
        logger('remove wish list throws client exception');
    }
    catch(\Exception $e){
        logger('remove wish list throws exception');
    }


    sleep(1);
    try{
      $themeJS_file = getThemeFileCurl($shop, $theme, 'assets/theme.js.liquid') ?? '';

      $themejs = (string) "{% if settings.cart_type == 'drawer' or settings.dbtfy_wish_list";
      if( ( $jsPos = strpos( $themeJS_file , $themejs  ) ) !== false ) {
          $updated_themeJS = str_replace( $themejs, "{% if settings.cart_type == 'drawer'",  $themeJS_file );
          putThemeFileCurl($shop, $theme, $updated_themeJS, 'assets/theme.js.liquid');
      }
    }
    catch(\Exception $e){
      logger('update js on wish list addon throws exception');
    }

    sleep(5);
    try{
      $themeJS_file = getThemeFileCurl($shop, $theme, 'assets/theme.js.liquid') ?? '';

      $themejs = (string) "(s,o,a,f,l);return c}();{% endif %}{% if settings.cart_type == 'drawer' %}";
      if( ( $jsPos = strpos( $themeJS_file , $themejs  ) ) !== false ) {
          $updated_themeJS = str_replace( $themejs , "(s,o,a,f,l);return c}();", $themeJS_file );
          putThemeFileCurl($shop, $theme, $updated_themeJS, 'assets/theme.js.liquid');
      }
    }
    catch(\Exception $e){
      logger('update js on wish list addon throws exception');
    }


  }
}
?>
